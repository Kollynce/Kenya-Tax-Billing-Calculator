{"version":3,"file":"js/271.571b6020.js","mappings":"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","sources":["webpack://sanaapesa/./src/utils/taxUtils.js","webpack://sanaapesa/./src/components/InputField.vue","webpack://sanaapesa/./src/components/InputField.vue?e0ec","webpack://sanaapesa/./src/services/taxService.js","webpack://sanaapesa/./src/components/Button.vue","webpack://sanaapesa/./src/components/Button.vue?4e0d"],"sourcesContent":["/**\n * Constants for tax calculations\n */\nexport const TAX_CONSTANTS = {\n  PERSONAL_RELIEF: 28800, // Annual personal relief (2400 monthly)\n  NSSF_TIER_I_MAX: 4320, // Monthly NSSF Tier I maximum (2.4% of 180,000)\n  NSSF_TIER_II_MAX: 18000, // Monthly NSSF Tier II maximum\n  NSSF_RATE: 0.024, // 2.4% NSSF contribution rate (3rd Schedule Feb 2025)\n  SHIF_RATE: 0.0275, // 2.75% SHIF rate (replaces NHIF)\n  SHIF_MIN_CONTRIBUTION: 300, // Minimum monthly SHIF contribution\n  SHIF_MAX_CONTRIBUTION: 5000, // Maximum monthly SHIF contribution\n  HOUSING_LEVY_RATE: 0.015, // 1.5% Housing Levy\n  VAT_RATE: 0.16,\n  DIGITAL_SERVICE_TAX_RATE: 0.015,\n  TAX_BRACKETS: [\n    { min: 0, max: 24000, rate: 10 },\n    { min: 24000, max: 32333, rate: 25 },\n    { min: 32333, max: 500000, rate: 30 },\n    { min: 500000, max: 800000, rate: 32.5 },\n    { min: 800000, max: null, rate: 35 }\n  ],\n  NSSF_TIER_I_RATE: 0.024, // 2.4% for Tier I\n  NSSF_TIER_II_RATE: 0.024, // 2.4% for Tier II\n  INSURANCE_RELIEF_RATE: 0.15, // 15% of insurance premiums\n  INSURANCE_RELIEF_MAX_MONTHLY: 5000, // Max 5,000 KES monthly relief\n  HOUSING_RELIEF_RATE: 0.15, // 15% of housing contributions\n  HOUSING_RELIEF_MAX_ANNUAL: 108000 // Max 108,000 KES annual relief\n};\n\n// Add billing constants for easier import across app\nexport const BILLING_CONSTANTS = {\n  MINIMUM_HOURLY_RATES: {\n    designer: 2500,\n    writer: 2000,\n    musician: 2500,\n    photographer: 3000,\n    videographer: 3500,\n    'digital-artist': 2800,\n    animator: 3000,\n    'voice-artist': 2000,\n    'social-media': 2000,\n    general: 2000\n  }\n};\n\n/**\n * Calculate tax for a given annual income using the provided tax brackets\n * @param {number} annualIncome Total annual income\n * @param {Array} brackets Tax brackets array with min, max, and rate properties\n * @returns {number} Total tax amount\n */\nexport function calculateIncomeTax(annualIncome, brackets) {\n  let totalTax = 0;\n  let remainingIncome = annualIncome;\n\n  // Sort brackets by minimum amount to ensure correct calculation order\n  const sortedBrackets = [...brackets].sort((a, b) => a.min - b.min);\n\n  for (const bracket of sortedBrackets) {\n    if (remainingIncome <= 0) break;\n\n    const bracketAmount = bracket.max === null\n      ? remainingIncome\n      : Math.min(remainingIncome, bracket.max - bracket.min);\n\n    if (bracketAmount > 0) {\n      totalTax += bracketAmount * (bracket.rate / 100);\n      remainingIncome -= bracketAmount;\n    }\n  }\n\n  return totalTax;\n}\n\n/**\n * Format currency in KES\n * @param {number} amount Amount to format\n * @returns {string} Formatted currency string\n */\nexport function formatCurrency(amount) {\n  return new Intl.NumberFormat('en-KE', {\n    style: 'currency',\n    currency: 'KES',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(amount);\n}\n\n/**\n * Format percentage\n * @param {number} value Decimal value to format as percentage\n * @returns {string} Formatted percentage string\n */\nexport function formatPercentage(value) {\n  return new Intl.NumberFormat('en-KE', {\n    style: 'percent',\n    minimumFractionDigits: 1,\n    maximumFractionDigits: 1\n  }).format(value);\n}\n\n/**\n * Calculate NSSF contribution\n * @param {number} monthlyIncome Monthly gross income\n * @param {Object} nssfTiers NSSF tier options\n * @returns {number} Monthly NSSF contribution\n */\nexport function calculateNSSFContribution(monthlyIncome, nssfTiers = { includeTierI: true, includeTierII: true }) {\n  const nssfCalc = calculateNSSFByTier(monthlyIncome, nssfTiers);\n  return nssfCalc.total;\n}\n\n/**\n * Calculate NSSF contribution by tier\n * @param {number} monthlyIncome Monthly gross income\n * @param {Object} options NSSF calculation options\n * @returns {Object} NSSF contributions by tier\n */\nexport function calculateNSSFByTier(monthlyIncome, { includeTierI = true, includeTierII = true } = {}) {\n  const tierI = includeTierI \n    ? Math.min(monthlyIncome * TAX_CONSTANTS.NSSF_TIER_I_RATE, TAX_CONSTANTS.NSSF_TIER_I_MAX)\n    : 0;\n    \n  const tierII = includeTierII \n    ? Math.min(\n        Math.max(0, monthlyIncome - TAX_CONSTANTS.NSSF_TIER_I_MAX) * TAX_CONSTANTS.NSSF_TIER_II_RATE,\n        TAX_CONSTANTS.NSSF_TIER_II_MAX\n      )\n    : 0;\n\n  return {\n    tierI,\n    tierII,\n    total: tierI + tierII\n  };\n}\n\n/**\n * Calculate SHIF contribution\n * @param {number} monthlyIncome Monthly gross income\n * @returns {number} Monthly SHIF contribution\n */\nexport function calculateSHIFContribution(monthlyIncome) {\n  const contribution = monthlyIncome * TAX_CONSTANTS.SHIF_RATE;\n  return Math.min(Math.max(TAX_CONSTANTS.SHIF_MIN_CONTRIBUTION, contribution), TAX_CONSTANTS.SHIF_MAX_CONTRIBUTION);\n}\n\n/**\n * Calculate housing levy\n * @param {number} monthlyIncome Monthly gross income\n * @returns {number} Monthly housing levy amount\n */\nexport function calculateHousingLevy(monthlyIncome) {\n  return monthlyIncome * TAX_CONSTANTS.HOUSING_LEVY_RATE;\n}\n\n/**\n * Calculate tax for a specific tax bracket\n * @param {number} income Taxable income\n * @param {Object} bracket Tax bracket information\n * @returns {number} Tax amount for the bracket\n */\nfunction calculateBracketTax(income, bracket) {\n  const taxableInBracket = Math.min(\n    Math.max(0, income - bracket.min),\n    bracket.max ? bracket.max - bracket.min : Infinity\n  );\n  return taxableInBracket * bracket.rate;\n}\n\n/**\n * Calculate monthly PAYE tax\n * @param {number} annualTaxableIncome Annual taxable income\n * @param {Array} taxBrackets Tax brackets from the tax service\n * @returns {number} Annual PAYE tax\n */\nexport function calculatePAYE(annualTaxableIncome, taxBrackets) {\n  return taxBrackets.reduce((totalTax, bracket) => {\n    return totalTax + calculateBracketTax(annualTaxableIncome, bracket);\n  }, 0);\n}\n\n/**\n * Calculate insurance relief from insurance premiums\n * @param {number} monthlyPremium Monthly insurance premium\n * @returns {number} Monthly insurance relief amount\n */\nexport function calculateInsuranceRelief(monthlyPremium) {\n  const reliefAmount = monthlyPremium * TAX_CONSTANTS.INSURANCE_RELIEF_RATE;\n  return Math.min(reliefAmount, TAX_CONSTANTS.INSURANCE_RELIEF_MAX_MONTHLY);\n}\n\n/**\n * Calculate affordable housing relief from housing contributions\n * @param {number} monthlyContribution Monthly housing contribution\n * @returns {number} Monthly affordable housing relief\n */\nexport function calculateHousingRelief(monthlyContribution) {\n  const annualContribution = monthlyContribution * 12;\n  const annualRelief = Math.min(\n    annualContribution * TAX_CONSTANTS.HOUSING_RELIEF_RATE, \n    TAX_CONSTANTS.HOUSING_RELIEF_MAX_ANNUAL\n  );\n  return annualRelief / 12; // Return monthly value\n}\n\n/**\n * Calculate net income and all tax components\n * @param {Object} params Calculation parameters\n * @returns {Object} Calculation results\n */\nexport function calculateNetIncome({\n  annualIncome,\n  includeNSSF = true,\n  includeSHIF = true,\n  includeHousingLevy = true,\n  taxRates,\n  nssfTiers = { includeTierI: true, includeTierII: true },\n  personalRelief = TAX_CONSTANTS.PERSONAL_RELIEF,\n  includePersonalRelief = true,\n  insurancePremium = 0,\n  includeInsuranceRelief = false,\n  housingContribution = 0,\n  includeHousingRelief = false\n}) {\n  const monthlyIncome = annualIncome / 12;\n  \n  // Calculate statutory deductions with NSSF tiers\n  const nssfDetails = calculateNSSFByTier(monthlyIncome, nssfTiers);\n  const monthlyNSSF = includeNSSF ? nssfDetails.total : 0;\n  const monthlySHIF = includeSHIF ? calculateSHIFContribution(monthlyIncome) : 0;\n  const monthlyHousingLevy = includeHousingLevy ? calculateHousingLevy(monthlyIncome) : 0;\n  \n  // Calculate reliefs\n  const monthlyPersonalRelief = includePersonalRelief ? personalRelief / 12 : 0;\n  const monthlyInsuranceRelief = includeInsuranceRelief ? calculateInsuranceRelief(Number(insurancePremium)) : 0;\n  const monthlyHousingRelief = includeHousingRelief ? calculateHousingRelief(Number(housingContribution)) : 0;\n  const totalMonthlyRelief = monthlyPersonalRelief + monthlyInsuranceRelief + monthlyHousingRelief;\n  \n  // Calculate annual values\n  const annualNSSF = monthlyNSSF * 12;\n  const annualSHIF = monthlySHIF * 12;\n  const annualHousingLevy = monthlyHousingLevy * 12;\n  const annualTotalRelief = totalMonthlyRelief * 12;\n  \n  // Calculate taxable income (deducting pension contributions as reliefs)\n  const taxableIncome = annualIncome - (includeNSSF ? annualNSSF : 0);\n  \n  // Calculate PAYE\n  const incomeTax = calculatePAYE(taxableIncome, taxRates.brackets);\n  const taxAfterRelief = Math.max(0, incomeTax - annualTotalRelief);\n  \n  // Calculate total deductions and net income\n  const totalDeductions = taxAfterRelief + annualNSSF + annualSHIF + annualHousingLevy;\n  const netIncome = annualIncome - totalDeductions;\n  \n  return {\n    grossIncome: annualIncome,\n    taxableIncome,\n    incomeTax,\n    personalRelief: includePersonalRelief ? personalRelief : 0,\n    insuranceRelief: includeInsuranceRelief ? monthlyInsuranceRelief * 12 : 0,\n    housingRelief: includeHousingRelief ? monthlyHousingRelief * 12 : 0,\n    totalRelief: annualTotalRelief,\n    nssfContribution: annualNSSF,\n    nssfTierI: nssfDetails.tierI * 12,\n    nssfTierII: nssfDetails.tierII * 12,\n    shifContribution: annualSHIF,\n    housingLevy: annualHousingLevy,\n    taxAfterRelief,\n    totalDeductions,\n    netIncome,\n    monthlyGross: monthlyIncome,\n    monthlyNet: netIncome / 12,\n    monthlyDeductions: totalDeductions / 12,\n    effectiveTaxRate: totalDeductions / annualIncome,\n    payeTax: taxAfterRelief, // Adding for cleaner reference in UI\n    monthlyBreakdown: {\n      grossPay: monthlyIncome,\n      nssf: monthlyNSSF,\n      nssfTierI: nssfDetails.tierI,\n      nssfTierII: nssfDetails.tierII,\n      shif: monthlySHIF,\n      housingLevy: monthlyHousingLevy,\n      taxableIncome: taxableIncome / 12,\n      paye: taxAfterRelief / 12,\n      personalRelief: monthlyPersonalRelief,\n      insuranceRelief: monthlyInsuranceRelief,\n      housingRelief: monthlyHousingRelief,\n      totalRelief: totalMonthlyRelief,\n      netPay: netIncome / 12\n    }\n  };\n}\n\n/**\n * Calculate gross income from net pay\n * @param {number} targetNetPay Desired net monthly pay\n * @param {Object} options Calculation options\n * @returns {number} Required gross income\n */\nexport function calculateGrossFromNet(targetNetPay, {\n  includeNSSF = true,\n  includeSHIF = true,\n  includeHousingLevy = true,\n  taxRates,\n  nssfTiers = { includeTierI: true, includeTierII: true },\n  personalRelief = TAX_CONSTANTS.PERSONAL_RELIEF,\n  includePersonalRelief = true,\n  includeInsuranceRelief = false,\n  insurancePremium = 0,\n  includeHousingRelief = false,\n  housingContribution = 0\n} = {}) {\n  let low = targetNetPay;\n  let high = targetNetPay * 3; // Initial upper bound\n  let iterations = 0;\n  const maxIterations = 20;\n  const tolerance = 0.01;\n\n  while (iterations < maxIterations) {\n    const testGross = (low + high) / 2;\n    const result = calculateNetIncome({\n      annualIncome: testGross * 12,\n      includeNSSF,\n      includeSHIF,\n      includeHousingLevy,\n      taxRates,\n      nssfTiers,\n      personalRelief,\n      includePersonalRelief,\n      includeInsuranceRelief,\n      insurancePremium,\n      includeHousingRelief,\n      housingContribution\n    });\n\n    const testNet = result.monthlyNet;\n    const diff = testNet - targetNetPay;\n\n    if (Math.abs(diff) < tolerance) {\n      return testGross * 12;\n    }\n\n    if (diff > 0) {\n      high = testGross;\n    } else {\n      low = testGross;\n    }\n\n    iterations++;\n  }\n\n  // Return best approximation after max iterations\n  return (low + high) / 2 * 12;\n}\n\n/**\n * Generate monthly breakdown of income and deductions\n * @param {Object} calculation Tax calculation results\n * @returns {Array} Monthly breakdown\n */\nexport function generateMonthlyBreakdown(calculation) {\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n  \n  return months.map(name => ({\n    name,\n    gross: calculation.monthlyGross,\n    deductions: calculation.monthlyDeductions,\n    net: calculation.monthlyNet\n  }));\n}\n\n/**\n * Generate tax calculation summary for reports\n * @param {Object} calculation Tax calculation results\n * @returns {Object} Summary object\n */\nexport function generateTaxSummary(calculation) {\n  return {\n    summary: {\n      annualGrossIncome: calculation.grossIncome,\n      annualNetIncome: calculation.netIncome,\n      totalTax: calculation.taxAfterRelief,\n      totalDeductions: calculation.totalDeductions,\n      effectiveTaxRate: calculation.effectiveTaxRate\n    },\n    monthly: {\n      grossIncome: calculation.monthlyGross,\n      netIncome: calculation.monthlyNet,\n      deductions: calculation.monthlyDeductions\n    },\n    deductions: {\n      incomeTax: calculation.taxAfterRelief,\n      nssf: calculation.nssfContribution,\n      shif: calculation.shifContribution,\n      personalRelief: calculation.personalRelief\n    },\n    breakdown: generateMonthlyBreakdown(calculation)\n  };\n}\n\n/**\n * Calculate Digital Service Tax\n * @param {number} grossIncome Gross income\n * @returns {number} Digital Service Tax amount\n */\nexport function calculateDigitalServiceTax(grossIncome) {\n  return grossIncome * TAX_CONSTANTS.DIGITAL_SERVICE_TAX_RATE;\n}","<template>\n  <div class=\"w-full\">\n    <label v-if=\"label\" :for=\"id\" class=\"block text-sm font-medium text-gray-700 mb-1\">{{ label }}</label>\n    <div class=\"relative\">\n      <input\n        :id=\"id\"\n        :type=\"actualType\"\n        :value=\"displayValue\"\n        :placeholder=\"placeholder\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :class=\"[\n          'input-field',\n          error ? 'input-error' : '',\n          disabled ? 'bg-gray-50 text-gray-500 cursor-not-allowed' : '',\n          rounded ? 'rounded-lg' : 'rounded-none'\n        ]\"\n        @input=\"handleInput\"\n        @blur=\"handleBlur\"\n      />\n      <div v-if=\"error\" class=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n        <svg class=\"h-5 w-5 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n    </div>\n    <p v-if=\"error\" class=\"mt-1 text-sm text-red-600\">{{ error }}</p>\n    <p v-if=\"hint\" class=\"mt-1 text-sm text-gray-500\">{{ hint }}</p>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue';\n\nexport default {\n  name: 'InputField',\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    modelValue: {\n      type: [String, Number],\n      default: ''\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    error: {\n      type: String,\n      default: ''\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    formatNumber: {\n      type: Boolean,\n      default: false\n    },\n    decimalPlaces: {\n      type: Number,\n      default: 2\n    }\n  },\n  emits: ['update:modelValue', 'input'],\n  setup(props, { emit }) {\n    const inputValue = ref(props.modelValue);\n    \n    // Format number with commas\n    const formatWithCommas = (value) => {\n      if (value === '' || value === null || value === undefined) return '';\n      \n      // Remove existing commas first\n      let plainValue = String(value).replace(/,/g, '');\n      \n      // Handle decimal places\n      let parts = plainValue.split('.');\n      let wholePart = parts[0];\n      let decimalPart = parts.length > 1 ? parts[1] : '';\n      \n      // Format with commas for thousands\n      let formattedWhole = wholePart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n      \n      // Add decimal part back if needed\n      if (props.decimalPlaces > 0 && parts.length > 1) {\n        // Truncate or pad decimal places\n        decimalPart = decimalPart.padEnd(props.decimalPlaces, '0').slice(0, props.decimalPlaces);\n        return `${formattedWhole}.${decimalPart}`;\n      }\n      \n      return formattedWhole;\n    };\n    \n    // Display formatted value\n    const displayValue = computed(() => {\n      if (props.formatNumber && inputValue.value !== '') {\n        return formatWithCommas(inputValue.value);\n      }\n      return inputValue.value;\n    });\n\n    // For formatted numbers, we'll always use text input\n    // This prevents browser validation issues with the comma separators\n    const actualType = computed(() => {\n      return props.formatNumber ? 'text' : props.type;\n    });\n    \n    // Handle input changes\n    const handleInput = (event) => {\n      let newValue = event.target.value;\n      \n      if (props.formatNumber) {\n        // Store the raw value (without commas) in the model\n        let rawValue = newValue.replace(/,/g, '');\n        \n        if (props.type === 'number' && rawValue !== '') {\n          // Ensure it's a valid number\n          if (!/^-?\\d*\\.?\\d*$/.test(rawValue)) {\n            return;\n          }\n        }\n        \n        // Update the internal value\n        inputValue.value = rawValue;\n        \n        // Emit the raw value\n        emit('update:modelValue', rawValue);\n        emit('input', rawValue);\n      } else {\n        // For non-formatted fields, just pass through\n        inputValue.value = newValue;\n        emit('update:modelValue', newValue);\n        emit('input', newValue);\n      }\n    };\n\n    // Handle blur event - reformat the value on blur\n    const handleBlur = () => {\n      if (props.formatNumber && inputValue.value !== '') {\n        // Emit the same value to trigger the formatter\n        emit('update:modelValue', inputValue.value);\n      }\n    };\n    \n    // Update local value when prop changes\n    watch(() => props.modelValue, (newValue) => {\n      inputValue.value = newValue;\n    });\n    \n    return {\n      inputValue,\n      displayValue,\n      actualType,\n      handleInput,\n      handleBlur\n    };\n  }\n};\n</script>\n\n<style scoped>\n.input-field {\n  @apply w-full rounded-md border-gray-300 shadow-sm transition-colors duration-200;\n}\n\n.input-field:focus {\n  @apply border-green-600 ring-2 ring-green-600 ring-opacity-50 outline-none;\n}\n\n.input-error {\n  @apply border-red-300;\n}\n\n.input-error:focus {\n  @apply border-red-500 ring-red-500;\n}\n</style>","import { render } from \"./InputField.vue?vue&type=template&id=7250fa50&scoped=true\"\nimport script from \"./InputField.vue?vue&type=script&lang=js\"\nexport * from \"./InputField.vue?vue&type=script&lang=js\"\n\nimport \"./InputField.vue?vue&type=style&index=0&id=7250fa50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7250fa50\"]])\n\nexport default __exports__","import { db } from '../firebase';\nimport {\n  doc,\n  collection,\n  getDocs,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  orderBy,\n  deleteDoc\n} from 'firebase/firestore';\n\nconst COLLECTIONS = {\n  TAX_RATES: 'taxRates',\n  CALCULATIONS: 'calculations',\n  SETTINGS: 'settings'\n};\n\n// Default tax rates to use when offline or unauthenticated\nexport const DEFAULT_TAX_RATES = {\n  year: 2024,\n  personalRelief: 28800, // Annual personal relief\n  brackets: [\n    { min: 0, max: 288000, rate: 0.10 },\n    { min: 288000, max: 388000, rate: 0.25 },\n    { min: 388000, max: 6000000, rate: 0.30 },\n    { min: 6000000, max: 9600000, rate: 0.32 },\n    { min: 9600000, max: null, rate: 0.35 }\n  ]\n};\n\n// Default settings for offline or unauthenticated users\nexport const DEFAULT_SETTINGS = {\n  currency: 'KES',\n  countryCode: 'KE',\n  taxYearStart: 1, // January\n  personalReliefEnabled: true,\n  nssfEnabled: true,\n  shifEnabled: true\n};\n\n/**\n * Get tax rates for a specific year\n * @param {number} year Tax year\n * @returns {Promise<Object>} Tax rates and brackets\n */\nexport async function getTaxRates(year) {\n  try {\n    const ratesDoc = doc(db, COLLECTIONS.TAX_RATES, year.toString());\n    const ratesSnapshot = await getDoc(ratesDoc);\n    \n    if (!ratesSnapshot.exists()) {\n      return DEFAULT_TAX_RATES;\n    }\n\n    return ratesSnapshot.data();\n  } catch (error) {\n    console.warn('Error fetching tax rates:', error);\n    return DEFAULT_TAX_RATES;\n  }\n}\n\n/**\n * Save a tax calculation\n * @param {string} userId User ID\n * @param {Object} calculation Tax calculation details\n * @returns {Promise<void>}\n */\nexport async function saveTaxCalculation(userId, calculation) {\n  const calculationRef = doc(collection(db, COLLECTIONS.CALCULATIONS));\n  await setDoc(calculationRef, {\n    userId,\n    timestamp: new Date(),\n    ...calculation\n  });\n}\n\n/**\n * Get user's tax calculations history\n * @param {string} userId User ID\n * @param {number} limit Maximum number of calculations to retrieve\n * @returns {Promise<Array>} Array of calculations\n */\nexport async function getUserCalculations(userId, limit = 10) {\n  const calculationsQuery = query(\n    collection(db, COLLECTIONS.CALCULATIONS),\n    where('userId', '==', userId),\n    orderBy('timestamp', 'desc'),\n    limit(limit)\n  );\n  \n  const querySnapshot = await getDocs(calculationsQuery);\n  return querySnapshot.docs.map(doc => ({\n    id: doc.id,\n    ...doc.data()\n  }));\n}\n\n/**\n * Get tax settings\n * @returns {Promise<Object>} Tax settings\n */\nexport async function getTaxSettings() {\n  try {\n    const settingsDoc = doc(db, COLLECTIONS.SETTINGS, 'default');\n    const settingsSnapshot = await getDoc(settingsDoc);\n    \n    if (!settingsSnapshot.exists()) {\n      return DEFAULT_SETTINGS;\n    }\n\n    return settingsSnapshot.data();\n  } catch (error) {\n    console.warn('Error fetching tax settings:', error);\n    return DEFAULT_SETTINGS;\n  }\n}\n\n/**\n * Update tax settings\n * @param {Object} settings New tax settings\n * @returns {Promise<void>}\n */\nexport async function updateTaxSettings(settings) {\n  const settingsDoc = doc(db, COLLECTIONS.SETTINGS, 'default');\n  await setDoc(settingsDoc, settings, { merge: true });\n}\n\n/**\n * Update tax rates\n * @param {Object} rates Tax rates and brackets\n * @returns {Promise<void>}\n */\nexport async function updateTaxRates(rates) {\n  const year = new Date().getFullYear();\n  const ratesDoc = doc(db, COLLECTIONS.TAX_RATES, year.toString());\n  await setDoc(ratesDoc, {\n    ...rates,\n    year,\n    updatedAt: new Date()\n  });\n}\n\n/**\n * Delete a saved calculation\n * @param {string} calculationId Calculation ID\n * @returns {Promise<void>}\n */\nexport async function deleteCalculation(calculationId) {\n  const calculationDoc = doc(db, COLLECTIONS.CALCULATIONS, calculationId);\n  await deleteDoc(calculationDoc);\n}","<template>\n  <button\n    :type=\"type\"\n    :class=\"[\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md text-center',\n      'border font-medium shadow-sm w-auto transition-all duration-200 ease-in-out',\n      'disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2',\n      sizeClasses,\n      variantClasses,\n      { 'flex-nowrap': !allowWrap }\n    ]\"\n    :disabled=\"disabled || loading\"\n    @click=\"$emit('click', $event)\"\n  >\n    <svg\n      v-if=\"loading\"\n      class=\"animate-spin flex-shrink-0 mr-2\"\n      :class=\"iconSizeClass\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\" />\n      <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n    </svg>\n    <span :class=\"{ 'truncate': truncateText }\">\n      <slot></slot>\n    </span>\n    <slot name=\"right-icon\"></slot>\n  </button>\n</template>\n\n<script>\nexport default {\n  name: 'BaseButton',\n  props: {\n    type: {\n      type: String,\n      default: 'button',\n      validator: (value) => ['button', 'submit', 'reset'].includes(value)\n    },\n    variant: {\n      type: String,\n      default: 'primary',\n      validator: (value) => ['primary', 'secondary', 'gradient', 'white', 'outline', 'kenya'].includes(value)\n    },\n    size: {\n      type: String,\n      default: 'default',\n      validator: (value) => ['small', 'default', 'large'].includes(value)\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    allowWrap: {\n      type: Boolean,\n      default: false\n    },\n    truncateText: {\n      type: Boolean,\n      default: false\n    },\n    iconPosition: {\n      type: String,\n      default: 'right',\n      validator: (value) => ['left', 'right'].includes(value)\n    }\n  },\n  computed: {\n    variantClasses() {\n      const variants = {\n        primary: 'border-transparent bg-green-600 text-white hover:bg-green-500 focus:ring-green-600',\n        secondary: 'border-gray-300 bg-white text-gray-700 hover:bg-gray-50 hover:border-green-500 focus:ring-green-600',\n        gradient: 'border-transparent bg-gradient-to-r from-green-600 via-green-500 to-green-600 text-white hover:from-green-500 hover:via-green-400 hover:to-green-500 focus:ring-green-600 rounded-full',\n        kenya: 'border-transparent bg-green-600 text-white hover:bg-green-500 focus:ring-green-600',\n        white: 'border-transparent bg-white text-gray-900 hover:bg-gray-50 hover:text-green-600 focus:ring-green-600',\n        outline: 'border-green-600 bg-transparent text-green-600 hover:bg-green-50 focus:ring-green-600'\n      };\n      return variants[this.variant];\n    },\n    sizeClasses() {\n      const sizes = {\n        small: 'px-3 py-1.5 text-sm gap-1.5',\n        default: 'px-4 py-2 text-sm gap-2',\n        large: 'px-6 py-3 text-base gap-2.5'\n      };\n      return sizes[this.size];\n    },\n    iconSizeClass() {\n      const sizes = {\n        small: 'h-3.5 w-3.5',\n        default: 'h-4 w-4',\n        large: 'h-5 w-5'\n      };\n      return sizes[this.size];\n    }\n  }\n};\n</script>\n\n<style scoped>\n.flex-nowrap {\n  white-space: nowrap;\n}\n\n.inline-flex {\n  display: inline-flex;\n  align-items: center;\n}\n</style>","import { render } from \"./Button.vue?vue&type=template&id=7d8b5a0b&scoped=true\"\nimport script from \"./Button.vue?vue&type=script&lang=js\"\nexport * from \"./Button.vue?vue&type=script&lang=js\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=7d8b5a0b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7d8b5a0b\"]])\n\nexport default __exports__"],"names":["TAX_CONSTANTS","PERSONAL_RELIEF","NSSF_TIER_I_MAX","NSSF_TIER_II_MAX","NSSF_RATE","SHIF_RATE","SHIF_MIN_CONTRIBUTION","SHIF_MAX_CONTRIBUTION","HOUSING_LEVY_RATE","VAT_RATE","DIGITAL_SERVICE_TAX_RATE","TAX_BRACKETS","min","max","rate","NSSF_TIER_I_RATE","NSSF_TIER_II_RATE","INSURANCE_RELIEF_RATE","INSURANCE_RELIEF_MAX_MONTHLY","HOUSING_RELIEF_RATE","HOUSING_RELIEF_MAX_ANNUAL","BILLING_CONSTANTS","MINIMUM_HOURLY_RATES","designer","writer","musician","photographer","videographer","animator","general","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","value","calculateNSSFByTier","monthlyIncome","includeTierI","includeTierII","tierI","Math","tierII","total","calculateSHIFContribution","contribution","calculateHousingLevy","calculateBracketTax","income","bracket","taxableInBracket","Infinity","calculatePAYE","annualTaxableIncome","taxBrackets","reduce","totalTax","calculateInsuranceRelief","monthlyPremium","reliefAmount","calculateHousingRelief","monthlyContribution","annualContribution","annualRelief","calculateNetIncome","annualIncome","includeNSSF","includeSHIF","includeHousingLevy","taxRates","nssfTiers","personalRelief","includePersonalRelief","insurancePremium","includeInsuranceRelief","housingContribution","includeHousingRelief","nssfDetails","monthlyNSSF","monthlySHIF","monthlyHousingLevy","monthlyPersonalRelief","monthlyInsuranceRelief","Number","monthlyHousingRelief","totalMonthlyRelief","annualNSSF","annualSHIF","annualHousingLevy","annualTotalRelief","taxableIncome","incomeTax","brackets","taxAfterRelief","totalDeductions","netIncome","grossIncome","insuranceRelief","housingRelief","totalRelief","nssfContribution","nssfTierI","nssfTierII","shifContribution","housingLevy","monthlyGross","monthlyNet","monthlyDeductions","effectiveTaxRate","payeTax","monthlyBreakdown","grossPay","nssf","shif","paye","netPay","calculateGrossFromNet","targetNetPay","low","high","iterations","maxIterations","tolerance","testGross","result","testNet","diff","abs","generateMonthlyBreakdown","calculation","months","map","name","gross","deductions","net","generateTaxSummary","summary","annualGrossIncome","annualNetIncome","monthly","breakdown","calculateDigitalServiceTax","class","key","_createElementBlock","_hoisted_1","$props","label","for","id","_hoisted_2","_createCommentVNode","_createElementVNode","_hoisted_3","type","$setup","actualType","displayValue","placeholder","disabled","required","_normalizeClass","error","_ctx","rounded","onInput","_cache","args","handleInput","onBlur","handleBlur","_hoisted_4","_hoisted_5","xmlns","viewBox","fill","d","_hoisted_6","_toDisplayString","hint","_hoisted_7","props","String","modelValue","default","Boolean","formatNumber","decimalPlaces","emits","setup","emit","inputValue","ref","formatWithCommas","undefined","plainValue","replace","parts","split","wholePart","decimalPart","length","formattedWhole","padEnd","slice","computed","event","newValue","target","rawValue","test","watch","__exports__","render","COLLECTIONS","TAX_RATES","CALCULATIONS","SETTINGS","DEFAULT_TAX_RATES","year","DEFAULT_SETTINGS","countryCode","taxYearStart","personalReliefEnabled","nssfEnabled","shifEnabled","async","getTaxRates","ratesDoc","doc","db","toString","ratesSnapshot","getDoc","exists","data","console","warn","saveTaxCalculation","userId","calculationRef","collection","setDoc","timestamp","Date","getUserCalculations","limit","calculationsQuery","query","where","orderBy","querySnapshot","getDocs","docs","getTaxSettings","settingsDoc","settingsSnapshot","updateTaxRates","rates","getFullYear","updatedAt","$options","sizeClasses","variantClasses","allowWrap","loading","onClick","$event","$emit","iconSizeClass","cx","cy","r","stroke","truncateText","_renderSlot","$slots","validator","includes","variant","size","iconPosition","variants","primary","secondary","gradient","kenya","white","outline","this","sizes","small","large"],"sourceRoot":""}