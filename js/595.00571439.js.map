{"version":3,"file":"js/595.00571439.js","mappings":"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","sources":["webpack://my-tax-calculator/./src/utils/taxUtils.js","webpack://my-tax-calculator/./src/views/InvoiceCreate.vue","webpack://my-tax-calculator/./src/components/InvoiceDisplay.vue","webpack://my-tax-calculator/./src/components/InvoiceDisplay.vue?be98","webpack://my-tax-calculator/./src/views/InvoiceCreate.vue?2478"],"sourcesContent":["/**\n * Constants for tax calculations\n */\nexport const TAX_CONSTANTS = {\n  PERSONAL_RELIEF: 28800, // Annual personal relief (2400 monthly)\n  NSSF_TIER_I_MAX: 4320, // Monthly NSSF Tier I maximum (2.4% of 180,000)\n  NSSF_TIER_II_MAX: 18000, // Monthly NSSF Tier II maximum\n  NSSF_RATE: 0.024, // 2.4% NSSF contribution rate (3rd Schedule Feb 2025)\n  SHIF_RATE: 0.0275, // 2.75% SHIF rate (replaces NHIF)\n  SHIF_MIN_CONTRIBUTION: 300, // Minimum monthly SHIF contribution\n  SHIF_MAX_CONTRIBUTION: 5000, // Maximum monthly SHIF contribution\n  HOUSING_LEVY_RATE: 0.015, // 1.5% Housing Levy\n  VAT_RATE: 0.16,\n  DIGITAL_SERVICE_TAX_RATE: 0.015,\n  TAX_BRACKETS: [\n    { min: 0, max: 24000, rate: 10 },\n    { min: 24000, max: 32333, rate: 25 },\n    { min: 32333, max: 500000, rate: 30 },\n    { min: 500000, max: 800000, rate: 32.5 },\n    { min: 800000, max: null, rate: 35 }\n  ],\n  NSSF_TIER_I_RATE: 0.024, // 2.4% for Tier I\n  NSSF_TIER_II_RATE: 0.024, // 2.4% for Tier II\n  INSURANCE_RELIEF_RATE: 0.15, // 15% of insurance premiums\n  INSURANCE_RELIEF_MAX_MONTHLY: 5000, // Max 5,000 KES monthly relief\n  HOUSING_RELIEF_RATE: 0.15, // 15% of housing contributions\n  HOUSING_RELIEF_MAX_ANNUAL: 108000 // Max 108,000 KES annual relief\n};\n\n// Add billing constants for easier import across app\nexport const BILLING_CONSTANTS = {\n  MINIMUM_HOURLY_RATES: {\n    designer: 2500,\n    writer: 2000,\n    musician: 2500,\n    photographer: 3000,\n    videographer: 3500,\n    'digital-artist': 2800,\n    animator: 3000,\n    'voice-artist': 2000,\n    'social-media': 2000,\n    general: 2000\n  }\n};\n\n/**\n * Calculate tax for a given annual income using the provided tax brackets\n * @param {number} annualIncome Total annual income\n * @param {Array} brackets Tax brackets array with min, max, and rate properties\n * @returns {number} Total tax amount\n */\nexport function calculateIncomeTax(annualIncome, brackets) {\n  let totalTax = 0;\n  let remainingIncome = annualIncome;\n\n  // Sort brackets by minimum amount to ensure correct calculation order\n  const sortedBrackets = [...brackets].sort((a, b) => a.min - b.min);\n\n  for (const bracket of sortedBrackets) {\n    if (remainingIncome <= 0) break;\n\n    const bracketAmount = bracket.max === null\n      ? remainingIncome\n      : Math.min(remainingIncome, bracket.max - bracket.min);\n\n    if (bracketAmount > 0) {\n      totalTax += bracketAmount * (bracket.rate / 100);\n      remainingIncome -= bracketAmount;\n    }\n  }\n\n  return totalTax;\n}\n\n/**\n * Format currency in KES\n * @param {number} amount Amount to format\n * @returns {string} Formatted currency string\n */\nexport function formatCurrency(amount) {\n  return new Intl.NumberFormat('en-KE', {\n    style: 'currency',\n    currency: 'KES',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(amount);\n}\n\n/**\n * Format percentage\n * @param {number} value Decimal value to format as percentage\n * @returns {string} Formatted percentage string\n */\nexport function formatPercentage(value) {\n  return new Intl.NumberFormat('en-KE', {\n    style: 'percent',\n    minimumFractionDigits: 1,\n    maximumFractionDigits: 1\n  }).format(value);\n}\n\n/**\n * Calculate NSSF contribution\n * @param {number} monthlyIncome Monthly gross income\n * @param {Object} nssfTiers NSSF tier options\n * @returns {number} Monthly NSSF contribution\n */\nexport function calculateNSSFContribution(monthlyIncome, nssfTiers = { includeTierI: true, includeTierII: true }) {\n  const nssfCalc = calculateNSSFByTier(monthlyIncome, nssfTiers);\n  return nssfCalc.total;\n}\n\n/**\n * Calculate NSSF contribution by tier\n * @param {number} monthlyIncome Monthly gross income\n * @param {Object} options NSSF calculation options\n * @returns {Object} NSSF contributions by tier\n */\nexport function calculateNSSFByTier(monthlyIncome, { includeTierI = true, includeTierII = true } = {}) {\n  const tierI = includeTierI \n    ? Math.min(monthlyIncome * TAX_CONSTANTS.NSSF_TIER_I_RATE, TAX_CONSTANTS.NSSF_TIER_I_MAX)\n    : 0;\n    \n  const tierII = includeTierII \n    ? Math.min(\n        Math.max(0, monthlyIncome - TAX_CONSTANTS.NSSF_TIER_I_MAX) * TAX_CONSTANTS.NSSF_TIER_II_RATE,\n        TAX_CONSTANTS.NSSF_TIER_II_MAX\n      )\n    : 0;\n\n  return {\n    tierI,\n    tierII,\n    total: tierI + tierII\n  };\n}\n\n/**\n * Calculate SHIF contribution\n * @param {number} monthlyIncome Monthly gross income\n * @returns {number} Monthly SHIF contribution\n */\nexport function calculateSHIFContribution(monthlyIncome) {\n  const contribution = monthlyIncome * TAX_CONSTANTS.SHIF_RATE;\n  return Math.min(Math.max(TAX_CONSTANTS.SHIF_MIN_CONTRIBUTION, contribution), TAX_CONSTANTS.SHIF_MAX_CONTRIBUTION);\n}\n\n/**\n * Calculate housing levy\n * @param {number} monthlyIncome Monthly gross income\n * @returns {number} Monthly housing levy amount\n */\nexport function calculateHousingLevy(monthlyIncome) {\n  return monthlyIncome * TAX_CONSTANTS.HOUSING_LEVY_RATE;\n}\n\n/**\n * Calculate tax for a specific tax bracket\n * @param {number} income Taxable income\n * @param {Object} bracket Tax bracket information\n * @returns {number} Tax amount for the bracket\n */\nfunction calculateBracketTax(income, bracket) {\n  const taxableInBracket = Math.min(\n    Math.max(0, income - bracket.min),\n    bracket.max ? bracket.max - bracket.min : Infinity\n  );\n  return taxableInBracket * bracket.rate;\n}\n\n/**\n * Calculate monthly PAYE tax\n * @param {number} annualTaxableIncome Annual taxable income\n * @param {Array} taxBrackets Tax brackets from the tax service\n * @returns {number} Annual PAYE tax\n */\nexport function calculatePAYE(annualTaxableIncome, taxBrackets) {\n  return taxBrackets.reduce((totalTax, bracket) => {\n    return totalTax + calculateBracketTax(annualTaxableIncome, bracket);\n  }, 0);\n}\n\n/**\n * Calculate insurance relief from insurance premiums\n * @param {number} monthlyPremium Monthly insurance premium\n * @returns {number} Monthly insurance relief amount\n */\nexport function calculateInsuranceRelief(monthlyPremium) {\n  const reliefAmount = monthlyPremium * TAX_CONSTANTS.INSURANCE_RELIEF_RATE;\n  return Math.min(reliefAmount, TAX_CONSTANTS.INSURANCE_RELIEF_MAX_MONTHLY);\n}\n\n/**\n * Calculate affordable housing relief from housing contributions\n * @param {number} monthlyContribution Monthly housing contribution\n * @returns {number} Monthly affordable housing relief\n */\nexport function calculateHousingRelief(monthlyContribution) {\n  const annualContribution = monthlyContribution * 12;\n  const annualRelief = Math.min(\n    annualContribution * TAX_CONSTANTS.HOUSING_RELIEF_RATE, \n    TAX_CONSTANTS.HOUSING_RELIEF_MAX_ANNUAL\n  );\n  return annualRelief / 12; // Return monthly value\n}\n\n/**\n * Calculate net income and all tax components\n * @param {Object} params Calculation parameters\n * @returns {Object} Calculation results\n */\nexport function calculateNetIncome({\n  annualIncome,\n  includeNSSF = true,\n  includeSHIF = true,\n  includeHousingLevy = true,\n  taxRates,\n  nssfTiers = { includeTierI: true, includeTierII: true },\n  personalRelief = TAX_CONSTANTS.PERSONAL_RELIEF,\n  includePersonalRelief = true,\n  insurancePremium = 0,\n  includeInsuranceRelief = false,\n  housingContribution = 0,\n  includeHousingRelief = false\n}) {\n  const monthlyIncome = annualIncome / 12;\n  \n  // Calculate statutory deductions with NSSF tiers\n  const nssfDetails = calculateNSSFByTier(monthlyIncome, nssfTiers);\n  const monthlyNSSF = includeNSSF ? nssfDetails.total : 0;\n  const monthlySHIF = includeSHIF ? calculateSHIFContribution(monthlyIncome) : 0;\n  const monthlyHousingLevy = includeHousingLevy ? calculateHousingLevy(monthlyIncome) : 0;\n  \n  // Calculate reliefs\n  const monthlyPersonalRelief = includePersonalRelief ? personalRelief / 12 : 0;\n  const monthlyInsuranceRelief = includeInsuranceRelief ? calculateInsuranceRelief(Number(insurancePremium)) : 0;\n  const monthlyHousingRelief = includeHousingRelief ? calculateHousingRelief(Number(housingContribution)) : 0;\n  const totalMonthlyRelief = monthlyPersonalRelief + monthlyInsuranceRelief + monthlyHousingRelief;\n  \n  // Calculate annual values\n  const annualNSSF = monthlyNSSF * 12;\n  const annualSHIF = monthlySHIF * 12;\n  const annualHousingLevy = monthlyHousingLevy * 12;\n  const annualTotalRelief = totalMonthlyRelief * 12;\n  \n  // Calculate taxable income (deducting pension contributions as reliefs)\n  const taxableIncome = annualIncome - (includeNSSF ? annualNSSF : 0);\n  \n  // Calculate PAYE\n  const incomeTax = calculatePAYE(taxableIncome, taxRates.brackets);\n  const taxAfterRelief = Math.max(0, incomeTax - annualTotalRelief);\n  \n  // Calculate total deductions and net income\n  const totalDeductions = taxAfterRelief + annualNSSF + annualSHIF + annualHousingLevy;\n  const netIncome = annualIncome - totalDeductions;\n  \n  return {\n    grossIncome: annualIncome,\n    taxableIncome,\n    incomeTax,\n    personalRelief: includePersonalRelief ? personalRelief : 0,\n    insuranceRelief: includeInsuranceRelief ? monthlyInsuranceRelief * 12 : 0,\n    housingRelief: includeHousingRelief ? monthlyHousingRelief * 12 : 0,\n    totalRelief: annualTotalRelief,\n    nssfContribution: annualNSSF,\n    nssfTierI: nssfDetails.tierI * 12,\n    nssfTierII: nssfDetails.tierII * 12,\n    shifContribution: annualSHIF,\n    housingLevy: annualHousingLevy,\n    taxAfterRelief,\n    totalDeductions,\n    netIncome,\n    monthlyGross: monthlyIncome,\n    monthlyNet: netIncome / 12,\n    monthlyDeductions: totalDeductions / 12,\n    effectiveTaxRate: totalDeductions / annualIncome,\n    payeTax: taxAfterRelief, // Adding for cleaner reference in UI\n    monthlyBreakdown: {\n      grossPay: monthlyIncome,\n      nssf: monthlyNSSF,\n      nssfTierI: nssfDetails.tierI,\n      nssfTierII: nssfDetails.tierII,\n      shif: monthlySHIF,\n      housingLevy: monthlyHousingLevy,\n      taxableIncome: taxableIncome / 12,\n      paye: taxAfterRelief / 12,\n      personalRelief: monthlyPersonalRelief,\n      insuranceRelief: monthlyInsuranceRelief,\n      housingRelief: monthlyHousingRelief,\n      totalRelief: totalMonthlyRelief,\n      netPay: netIncome / 12\n    }\n  };\n}\n\n/**\n * Calculate gross income from net pay\n * @param {number} targetNetPay Desired net monthly pay\n * @param {Object} options Calculation options\n * @returns {number} Required gross income\n */\nexport function calculateGrossFromNet(targetNetPay, {\n  includeNSSF = true,\n  includeSHIF = true,\n  includeHousingLevy = true,\n  taxRates,\n  nssfTiers = { includeTierI: true, includeTierII: true },\n  personalRelief = TAX_CONSTANTS.PERSONAL_RELIEF,\n  includePersonalRelief = true,\n  includeInsuranceRelief = false,\n  insurancePremium = 0,\n  includeHousingRelief = false,\n  housingContribution = 0\n} = {}) {\n  let low = targetNetPay;\n  let high = targetNetPay * 3; // Initial upper bound\n  let iterations = 0;\n  const maxIterations = 20;\n  const tolerance = 0.01;\n\n  while (iterations < maxIterations) {\n    const testGross = (low + high) / 2;\n    const result = calculateNetIncome({\n      annualIncome: testGross * 12,\n      includeNSSF,\n      includeSHIF,\n      includeHousingLevy,\n      taxRates,\n      nssfTiers,\n      personalRelief,\n      includePersonalRelief,\n      includeInsuranceRelief,\n      insurancePremium,\n      includeHousingRelief,\n      housingContribution\n    });\n\n    const testNet = result.monthlyNet;\n    const diff = testNet - targetNetPay;\n\n    if (Math.abs(diff) < tolerance) {\n      return testGross * 12;\n    }\n\n    if (diff > 0) {\n      high = testGross;\n    } else {\n      low = testGross;\n    }\n\n    iterations++;\n  }\n\n  // Return best approximation after max iterations\n  return (low + high) / 2 * 12;\n}\n\n/**\n * Generate monthly breakdown of income and deductions\n * @param {Object} calculation Tax calculation results\n * @returns {Array} Monthly breakdown\n */\nexport function generateMonthlyBreakdown(calculation) {\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n  \n  return months.map(name => ({\n    name,\n    gross: calculation.monthlyGross,\n    deductions: calculation.monthlyDeductions,\n    net: calculation.monthlyNet\n  }));\n}\n\n/**\n * Generate tax calculation summary for reports\n * @param {Object} calculation Tax calculation results\n * @returns {Object} Summary object\n */\nexport function generateTaxSummary(calculation) {\n  return {\n    summary: {\n      annualGrossIncome: calculation.grossIncome,\n      annualNetIncome: calculation.netIncome,\n      totalTax: calculation.taxAfterRelief,\n      totalDeductions: calculation.totalDeductions,\n      effectiveTaxRate: calculation.effectiveTaxRate\n    },\n    monthly: {\n      grossIncome: calculation.monthlyGross,\n      netIncome: calculation.monthlyNet,\n      deductions: calculation.monthlyDeductions\n    },\n    deductions: {\n      incomeTax: calculation.taxAfterRelief,\n      nssf: calculation.nssfContribution,\n      shif: calculation.shifContribution,\n      personalRelief: calculation.personalRelief\n    },\n    breakdown: generateMonthlyBreakdown(calculation)\n  };\n}\n\n/**\n * Calculate Digital Service Tax\n * @param {number} grossIncome Gross income\n * @returns {number} Digital Service Tax amount\n */\nexport function calculateDigitalServiceTax(grossIncome) {\n  return grossIncome * TAX_CONSTANTS.DIGITAL_SERVICE_TAX_RATE;\n}","<template>\n  <div class=\"max-w-7xl mx-auto px-4 py-8\">\n    <h1 class=\"text-3xl font-bold text-gray-900 mb-8\">Create Invoice</h1>\n\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n      <!-- Invoice Form -->\n      <div class=\"space-y-6\">\n        <div class=\"bg-white rounded-lg shadow p-6\">\n          <h2 class=\"text-xl font-semibold mb-4\">Invoice Details</h2>\n          \n          <!-- Basic Details -->\n          <div class=\"space-y-4 mb-6\">\n            <div>\n              <label class=\"block text-sm font-medium text-gray-700\">Invoice Title</label>\n              <input\n                v-model=\"invoice.title\"\n                type=\"text\"\n                class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                placeholder=\"Professional Services\"\n              />\n            </div>\n            <div>\n              <label class=\"block text-sm font-medium text-gray-700\">Invoice Number</label>\n              <input\n                v-model=\"invoice.invoiceNumber\"\n                type=\"text\"\n                class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                placeholder=\"INV-001\"\n              />\n            </div>\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Date</label>\n                <input\n                  v-model=\"invoice.date\"\n                  type=\"date\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                />\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Due Date</label>\n                <input\n                  v-model=\"invoice.dueDate\"\n                  type=\"date\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <!-- Your Details -->\n          <div class=\"mb-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Your Details</h3>\n            <div class=\"space-y-4\">\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Business Name</label>\n                <input\n                  v-model=\"invoice.from.name\"\n                  type=\"text\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                />\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Address</label>\n                <textarea\n                  v-model=\"invoice.from.address\"\n                  rows=\"2\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                ></textarea>\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Email</label>\n                <input\n                  v-model=\"invoice.from.email\"\n                  type=\"email\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                />\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Phone</label>\n                <input\n                  v-model=\"invoice.from.phone\"\n                  type=\"text\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <!-- Client Details -->\n          <div class=\"mb-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Client Details</h3>\n            <div class=\"space-y-4\">\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Client Name</label>\n                <input\n                  v-model=\"invoice.client.name\"\n                  type=\"text\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                />\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Address</label>\n                <textarea\n                  v-model=\"invoice.client.address\"\n                  rows=\"2\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                ></textarea>\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Email</label>\n                <input\n                  v-model=\"invoice.client.email\"\n                  type=\"email\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                />\n              </div>\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700\">Phone</label>\n                <input\n                  v-model=\"invoice.client.phone\"\n                  type=\"text\"\n                  class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <!-- Invoice Items -->\n          <div class=\"mb-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Items</h3>\n            <div class=\"space-y-4\">\n              <div v-for=\"(item, index) in invoice.items\" :key=\"index\" class=\"border-b pb-4\">\n                <div class=\"grid grid-cols-12 gap-4\">\n                  <div class=\"col-span-6\">\n                    <label class=\"block text-sm font-medium text-gray-700\">Description</label>\n                    <input\n                      v-model=\"item.description\"\n                      type=\"text\"\n                      class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                    />\n                  </div>\n                  <div class=\"col-span-2\">\n                    <label class=\"block text-sm font-medium text-gray-700\">Quantity</label>\n                    <input\n                      v-model.number=\"item.quantity\"\n                      type=\"number\"\n                      min=\"1\"\n                      class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                    />\n                  </div>\n                  <div class=\"col-span-3\">\n                    <label class=\"block text-sm font-medium text-gray-700\">Rate</label>\n                    <input\n                      v-model.number=\"item.rate\"\n                      type=\"number\"\n                      :min=\"defaultRate\"\n                      class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                    />\n                  </div>\n                  <div class=\"col-span-1 flex items-end\">\n                    <button\n                      @click=\"removeItem(index)\"\n                      class=\"text-red-600 hover:text-red-800\"\n                    >\n                      <span class=\"sr-only\">Remove item</span>\n                      ×\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <button\n                @click=\"addItem\"\n                class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-green-700 bg-green-100 hover:bg-green-200\"\n              >\n                Add Item\n              </button>\n            </div>\n          </div>\n\n          <!-- Tax Settings -->\n          <div class=\"mb-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Tax Settings</h3>\n            <div class=\"space-y-4\">\n              <div class=\"flex items-center\">\n                <input\n                  v-model=\"invoice.includeVAT\"\n                  type=\"checkbox\"\n                  class=\"h-4 w-4 rounded border-gray-300 text-green-600 focus:ring-green-500\"\n                />\n                <label class=\"ml-2 block text-sm text-gray-700\">Include VAT (16%)</label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Payment Information -->\n          <div>\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Payment Information</h3>\n            <div class=\"space-y-4\">\n              <div v-for=\"(info, index) in invoice.paymentInfo\" :key=\"index\" class=\"flex items-center gap-2\">\n                <input\n                  v-model=\"invoice.paymentInfo[index]\"\n                  type=\"text\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-green-600 focus:ring-green-600\"\n                />\n                <button\n                  @click=\"removePaymentInfo(index)\"\n                  class=\"text-red-600 hover:text-red-800\"\n                >\n                  <span class=\"sr-only\">Remove payment info</span>\n                  ×\n                </button>\n              </div>\n              <button\n                @click=\"addPaymentInfo\"\n                class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-green-700 bg-green-100 hover:bg-green-200\"\n              >\n                Add Payment Info\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Invoice Preview -->\n      <div class=\"lg:sticky lg:top-8\">\n        <InvoiceDisplay\n          :invoice=\"invoice\"\n          :profession-type=\"profession\"\n          :include-digital-service-tax=\"isDigitalProfession\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport InvoiceDisplay from '../components/InvoiceDisplay.vue';\n\nexport default {\n  name: 'InvoiceCreate',\n  components: {\n    InvoiceDisplay\n  },\n\n  setup() {\n    const route = useRoute();\n    const profession = route.query.profession || 'general';\n    const defaultRate = Number(route.query.rate) || 3000;\n\n    const invoice = ref({\n      title: '',\n      invoiceNumber: `INV-${new Date().getTime().toString().slice(-4)}`,\n      date: new Date().toISOString().split('T')[0],\n      dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      from: {\n        name: '',\n        address: '',\n        email: '',\n        phone: ''\n      },\n      client: {\n        name: '',\n        address: '',\n        email: '',\n        phone: ''\n      },\n      items: [\n        {\n          description: 'Professional Services',\n          quantity: 1,\n          rate: defaultRate\n        }\n      ],\n      includeVAT: false,\n      paymentInfo: [\n        'Bank: Your Bank Name',\n        'Account Number: Your Account Number',\n        'Branch: Your Branch'\n      ]\n    });\n\n    const isDigitalProfession = computed(() => {\n      return ['designer', 'writer'].includes(profession);\n    });\n\n    const addItem = () => {\n      invoice.value.items.push({\n        description: '',\n        quantity: 1,\n        rate: defaultRate\n      });\n    };\n\n    const removeItem = (index) => {\n      invoice.value.items.splice(index, 1);\n    };\n\n    const addPaymentInfo = () => {\n      invoice.value.paymentInfo.push('');\n    };\n\n    const removePaymentInfo = (index) => {\n      invoice.value.paymentInfo.splice(index, 1);\n    };\n\n    return {\n      invoice,\n      profession,\n      defaultRate,\n      isDigitalProfession,\n      addItem,\n      removeItem,\n      addPaymentInfo,\n      removePaymentInfo\n    };\n  }\n};\n</script>","<template>\n  <div ref=\"invoiceContainer\" class=\"bg-white p-8 shadow-lg max-w-4xl mx-auto\">\n    <!-- Invoice Header -->\n    <div class=\"flex justify-between items-start mb-8\">\n      <div>\n        <h1 class=\"text-2xl font-bold text-gray-900\">{{ invoice.title }}</h1>\n        <p class=\"text-gray-600\">{{ invoice.invoiceNumber }}</p>\n      </div>\n      <div class=\"text-right\">\n        <p class=\"text-gray-600\">Date: {{ formatDate(invoice.date) }}</p>\n        <p class=\"text-gray-600\">Due Date: {{ formatDate(invoice.dueDate) }}</p>\n      </div>\n    </div>\n\n    <!-- Business and Client Information -->\n    <div class=\"grid grid-cols-2 gap-8 mb-8\">\n      <!-- From section -->\n      <div>\n        <h2 class=\"text-gray-700 font-semibold mb-2\">From:</h2>\n        <div class=\"text-gray-600\">\n          <p class=\"font-medium\">{{ invoice.from.name }}</p>\n          <p>{{ invoice.from.address }}</p>\n          <p>{{ invoice.from.email }}</p>\n          <p>{{ invoice.from.phone }}</p>\n          <p v-if=\"vatNumber\">VAT Number: {{ vatNumber }}</p>\n        </div>\n      </div>\n\n      <!-- To section -->\n      <div>\n        <h2 class=\"text-gray-700 font-semibold mb-2\">To:</h2>\n        <div class=\"text-gray-600\">\n          <p class=\"font-medium\">{{ invoice.client.name }}</p>\n          <p>{{ invoice.client.address }}</p>\n          <p>{{ invoice.client.email }}</p>\n          <p>{{ invoice.client.phone }}</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Items Table -->\n    <table class=\"w-full mb-8\">\n      <thead>\n        <tr class=\"border-b-2 border-gray-300 text-left\">\n          <th class=\"py-2 px-2 text-gray-700\">Description</th>\n          <th class=\"py-2 px-2 text-gray-700 text-right\">Quantity</th>\n          <th class=\"py-2 px-2 text-gray-700 text-right\">Rate</th>\n          <th class=\"py-2 px-2 text-gray-700 text-right\">Amount</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(item, index) in invoice.items\" :key=\"index\" class=\"border-b border-gray-200\">\n          <td class=\"py-2 px-2 text-gray-600\">{{ item.description }}</td>\n          <td class=\"py-2 px-2 text-gray-600 text-right\">{{ item.quantity }}</td>\n          <td class=\"py-2 px-2 text-gray-600 text-right\">{{ formatCurrency(item.rate) }}</td>\n          <td class=\"py-2 px-2 text-gray-600 text-right\">{{ formatCurrency(item.quantity * item.rate) }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Totals -->\n    <div class=\"flex justify-end mb-8\">\n      <div class=\"w-64\">\n        <div class=\"flex justify-between py-2\">\n          <span class=\"text-gray-600\">Subtotal:</span>\n          <span class=\"text-gray-800\">{{ formatCurrency(totals.subtotal) }}</span>\n        </div>\n        <div v-if=\"invoice.includeVAT\" class=\"flex justify-between py-2\">\n          <span class=\"text-gray-600\">VAT ({{ (vatRate * 100).toFixed(0) }}%):</span>\n          <span class=\"text-gray-800\">{{ formatCurrency(totals.vat) }}</span>\n        </div>\n        <div v-if=\"includeDigitalServiceTax\" class=\"flex justify-between py-2\">\n          <span class=\"text-gray-600\">Digital Service Tax (1.5%):</span>\n          <span class=\"text-gray-800\">{{ formatCurrency(totals.dst) }}</span>\n        </div>\n        <div class=\"flex justify-between py-2 font-semibold border-t border-gray-300\">\n          <span>Total:</span>\n          <span>{{ formatCurrency(totals.total) }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Notes -->\n    <div v-if=\"templateContent.notes\" class=\"mb-8\">\n      <h3 class=\"text-gray-700 font-semibold mb-2\">Notes:</h3>\n      <p class=\"text-gray-600 whitespace-pre-line\">{{ templateContent.notes }}</p>\n    </div>\n\n    <!-- Payment Information -->\n    <div v-if=\"invoice.paymentInfo\" class=\"mb-8\">\n      <h3 class=\"text-gray-700 font-semibold mb-2\">Payment Information:</h3>\n      <div class=\"text-gray-600\">\n        <p v-for=\"(line, index) in invoice.paymentInfo\" :key=\"index\">{{ line }}</p>\n      </div>\n    </div>\n\n    <!-- Terms -->\n    <div v-if=\"templateContent\" class=\"text-sm text-gray-500\">\n      <h3 class=\"text-gray-700 font-semibold mb-2\">Terms and Conditions:</h3>\n      <p class=\"whitespace-pre-line\">{{ templateContent.terms }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed } from 'vue';\nimport { formatCurrency } from '../utils/taxUtils';\n\nexport default {\n  name: 'InvoiceDisplay',\n  props: {\n    invoice: {\n      type: Object,\n      required: true\n    },\n    vatRate: {\n      type: Number,\n      default: 0.16 // 16% Kenya VAT rate\n    },\n    companyName: {\n      type: String,\n      default: ''\n    },\n    companyAddress: {\n      type: String,\n      default: ''\n    },\n    logo: {\n      type: String,\n      default: ''\n    },\n    vatNumber: {\n      type: String,\n      default: ''\n    },\n    paymentDetails: {\n      type: Object,\n      default: () => ({})\n    },\n    professionType: {\n      type: String,\n      default: 'general' // Options: 'designer', 'writer', 'musician', 'general'\n    },\n    includeDigitalServiceTax: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  setup(props) {\n    const totals = computed(() => {\n      const subtotal = props.invoice.items.reduce((sum, item) => sum + item.quantity * item.rate, 0);\n      const vat = props.invoice.includeVAT ? subtotal * props.vatRate : 0;\n      const dst = props.includeDigitalServiceTax ? subtotal * 0.015 : 0; // 1.5% Digital Service Tax\n      return {\n        subtotal,\n        vat,\n        dst,\n        total: subtotal + vat + dst\n      };\n    });\n\n    const professionTemplates = {\n      designer: {\n        terms: `This design work is protected by copyright laws. Upon full payment, the client will receive agreed-upon usage rights as specified in the project scope.\n                \nPayment Terms:\n- 50% upfront deposit required\n- Balance due within 30 days of invoice\n- Late payments subject to 2% monthly interest`,\n        notes: \"All revisions beyond the agreed scope will be billed separately.\"\n      },\n      writer: {\n        terms: `Content created remains intellectual property of the writer until full payment is received.\n                \nPayment Terms:\n- Word count based pricing\n- Additional research charged separately\n- 30 days payment terms`,\n        notes: \"Rates may vary based on research requirements and technical complexity.\"\n      },\n      musician: {\n        terms: `Music composition and rights remain with the artist until full payment.\n                \nPayment Terms:\n- 50% deposit for custom compositions\n- Usage rights as per agreement\n- 30 days payment terms`,\n        notes: \"Additional arrangements or instrumentations will be quoted separately.\"\n      },\n      general: {\n        terms: \"Standard 30-day payment terms apply.\",\n        notes: \"Thank you for your business.\"\n      }\n    };\n\n    const templateContent = computed(() => professionTemplates[props.professionType] || professionTemplates.general);\n\n    const formatDate = (date) => {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString('en-KE', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    };\n\n    return {\n      totals,\n      templateContent,\n      formatDate,\n      formatCurrency\n    };\n  }\n};\n</script>\n\n<style scoped>\n@media print {\n  .invoice-container {\n    padding: 0;\n    margin: 0;\n    box-shadow: none;\n  }\n}\n</style>","import { render } from \"./InvoiceDisplay.vue?vue&type=template&id=57b6f45d&scoped=true\"\nimport script from \"./InvoiceDisplay.vue?vue&type=script&lang=js\"\nexport * from \"./InvoiceDisplay.vue?vue&type=script&lang=js\"\n\nimport \"./InvoiceDisplay.vue?vue&type=style&index=0&id=57b6f45d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-57b6f45d\"]])\n\nexport default __exports__","import { render } from \"./InvoiceCreate.vue?vue&type=template&id=4f94241d\"\nimport script from \"./InvoiceCreate.vue?vue&type=script&lang=js\"\nexport * from \"./InvoiceCreate.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["TAX_CONSTANTS","PERSONAL_RELIEF","NSSF_TIER_I_MAX","NSSF_TIER_II_MAX","NSSF_RATE","SHIF_RATE","SHIF_MIN_CONTRIBUTION","SHIF_MAX_CONTRIBUTION","HOUSING_LEVY_RATE","VAT_RATE","DIGITAL_SERVICE_TAX_RATE","TAX_BRACKETS","min","max","rate","NSSF_TIER_I_RATE","NSSF_TIER_II_RATE","INSURANCE_RELIEF_RATE","INSURANCE_RELIEF_MAX_MONTHLY","HOUSING_RELIEF_RATE","HOUSING_RELIEF_MAX_ANNUAL","BILLING_CONSTANTS","MINIMUM_HOURLY_RATES","designer","writer","musician","photographer","videographer","animator","general","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","value","calculateNSSFByTier","monthlyIncome","includeTierI","includeTierII","tierI","Math","tierII","total","calculateSHIFContribution","contribution","calculateHousingLevy","calculateBracketTax","income","bracket","taxableInBracket","Infinity","calculatePAYE","annualTaxableIncome","taxBrackets","reduce","totalTax","calculateInsuranceRelief","monthlyPremium","reliefAmount","calculateHousingRelief","monthlyContribution","annualContribution","annualRelief","calculateNetIncome","annualIncome","includeNSSF","includeSHIF","includeHousingLevy","taxRates","nssfTiers","personalRelief","includePersonalRelief","insurancePremium","includeInsuranceRelief","housingContribution","includeHousingRelief","nssfDetails","monthlyNSSF","monthlySHIF","monthlyHousingLevy","monthlyPersonalRelief","monthlyInsuranceRelief","Number","monthlyHousingRelief","totalMonthlyRelief","annualNSSF","annualSHIF","annualHousingLevy","annualTotalRelief","taxableIncome","incomeTax","brackets","taxAfterRelief","totalDeductions","netIncome","grossIncome","insuranceRelief","housingRelief","totalRelief","nssfContribution","nssfTierI","nssfTierII","shifContribution","housingLevy","monthlyGross","monthlyNet","monthlyDeductions","effectiveTaxRate","payeTax","monthlyBreakdown","grossPay","nssf","shif","paye","netPay","calculateGrossFromNet","targetNetPay","low","high","iterations","maxIterations","tolerance","testGross","result","testNet","diff","abs","generateMonthlyBreakdown","calculation","months","map","name","gross","deductions","net","generateTaxSummary","summary","annualGrossIncome","annualNetIncome","monthly","breakdown","calculateDigitalServiceTax","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_cache","$event","$setup","invoice","title","type","placeholder","invoiceNumber","_hoisted_6","date","dueDate","_hoisted_7","_hoisted_8","from","address","rows","email","phone","_hoisted_9","_hoisted_10","client","_hoisted_11","_hoisted_12","_Fragment","_renderList","items","item","index","key","_hoisted_13","_hoisted_14","description","_hoisted_15","_hoisted_16","quantity","_hoisted_17","number","_hoisted_18","defaultRate","_hoisted_19","_hoisted_20","onClick","removeItem","_createTextVNode","_hoisted_21","args","addItem","_hoisted_22","_hoisted_23","_hoisted_24","includeVAT","_hoisted_25","paymentInfo","info","_hoisted_26","removePaymentInfo","_hoisted_27","addPaymentInfo","_hoisted_28","_createVNode","_component_InvoiceDisplay","profession","isDigitalProfession","ref","_toDisplayString","$props","formatDate","vatNumber","_createCommentVNode","totals","subtotal","vatRate","toFixed","vat","includeDigitalServiceTax","dst","templateContent","notes","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","line","_hoisted_33","_hoisted_34","terms","props","Object","required","default","companyName","String","companyAddress","logo","paymentDetails","professionType","Boolean","setup","computed","sum","professionTemplates","Date","toLocaleDateString","year","month","day","__exports__","components","InvoiceDisplay","route","useRoute","query","getTime","toString","slice","toISOString","split","now","includes","push","splice","render"],"sourceRoot":""}