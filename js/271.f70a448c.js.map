{"version":3,"file":"js/271.f70a448c.js","mappings":"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","sources":["webpack://sanaapesa/./src/utils/taxUtils.js","webpack://sanaapesa/./src/components/InputField.vue","webpack://sanaapesa/./src/components/InputField.vue?e0ec","webpack://sanaapesa/./src/services/taxService.js","webpack://sanaapesa/./src/components/Button.vue","webpack://sanaapesa/./src/components/Button.vue?4e0d"],"sourcesContent":["/**\r\n * Constants for tax calculations\r\n */\r\nexport const TAX_CONSTANTS = {\r\n  PERSONAL_RELIEF: 28800, // Annual personal relief (2400 monthly)\r\n  NSSF_TIER_I_MAX: 4320, // Monthly NSSF Tier I maximum (2.4% of 180,000)\r\n  NSSF_TIER_II_MAX: 18000, // Monthly NSSF Tier II maximum\r\n  NSSF_RATE: 0.024, // 2.4% NSSF contribution rate (3rd Schedule Feb 2025)\r\n  SHIF_RATE: 0.0275, // 2.75% SHIF rate (replaces NHIF)\r\n  SHIF_MIN_CONTRIBUTION: 300, // Minimum monthly SHIF contribution\r\n  SHIF_MAX_CONTRIBUTION: 5000, // Maximum monthly SHIF contribution\r\n  HOUSING_LEVY_RATE: 0.015, // 1.5% Housing Levy\r\n  VAT_RATE: 0.16,\r\n  DIGITAL_SERVICE_TAX_RATE: 0.015,\r\n  TAX_BRACKETS: [\r\n    { min: 0, max: 24000, rate: 10 },\r\n    { min: 24000, max: 32333, rate: 25 },\r\n    { min: 32333, max: 500000, rate: 30 },\r\n    { min: 500000, max: 800000, rate: 32.5 },\r\n    { min: 800000, max: null, rate: 35 }\r\n  ],\r\n  NSSF_TIER_I_RATE: 0.024, // 2.4% for Tier I\r\n  NSSF_TIER_II_RATE: 0.024, // 2.4% for Tier II\r\n  INSURANCE_RELIEF_RATE: 0.15, // 15% of insurance premiums\r\n  INSURANCE_RELIEF_MAX_MONTHLY: 5000, // Max 5,000 KES monthly relief\r\n  HOUSING_RELIEF_RATE: 0.15, // 15% of housing contributions\r\n  HOUSING_RELIEF_MAX_ANNUAL: 108000 // Max 108,000 KES annual relief\r\n};\r\n\r\n// Add billing constants for easier import across app\r\nexport const BILLING_CONSTANTS = {\r\n  MINIMUM_HOURLY_RATES: {\r\n    designer: 2500,\r\n    writer: 2000,\r\n    musician: 2500,\r\n    photographer: 3000,\r\n    videographer: 3500,\r\n    'digital-artist': 2800,\r\n    animator: 3000,\r\n    'voice-artist': 2000,\r\n    'social-media': 2000,\r\n    general: 2000\r\n  }\r\n};\r\n\r\n/**\r\n * Calculate tax for a given annual income using the provided tax brackets\r\n * @param {number} annualIncome Total annual income\r\n * @param {Array} brackets Tax brackets array with min, max, and rate properties\r\n * @returns {number} Total tax amount\r\n */\r\nexport function calculateIncomeTax(annualIncome, brackets) {\r\n  let totalTax = 0;\r\n  let remainingIncome = annualIncome;\r\n\r\n  // Sort brackets by minimum amount to ensure correct calculation order\r\n  const sortedBrackets = [...brackets].sort((a, b) => a.min - b.min);\r\n\r\n  for (const bracket of sortedBrackets) {\r\n    if (remainingIncome <= 0) break;\r\n\r\n    const bracketAmount = bracket.max === null\r\n      ? remainingIncome\r\n      : Math.min(remainingIncome, bracket.max - bracket.min);\r\n\r\n    if (bracketAmount > 0) {\r\n      totalTax += bracketAmount * (bracket.rate / 100);\r\n      remainingIncome -= bracketAmount;\r\n    }\r\n  }\r\n\r\n  return totalTax;\r\n}\r\n\r\n/**\r\n * Format currency in KES\r\n * @param {number} amount Amount to format\r\n * @returns {string} Formatted currency string\r\n */\r\nexport const formatCurrency = (amount) => {\r\n  // Ensure amount is a number and handle invalid inputs\r\n  const value = Number(amount);\r\n  if (isNaN(value)) return 'Ksh 0';\r\n  \r\n  // Format with Kenyan Shilling and thousands separator\r\n  return `Ksh ${value.toLocaleString('en-KE', {\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0\r\n  })}`;\r\n};\r\n\r\n/**\r\n * Format percentage\r\n * @param {number} value Decimal value to format as percentage\r\n * @returns {string} Formatted percentage string\r\n */\r\nexport function formatPercentage(value) {\r\n  return new Intl.NumberFormat('en-KE', {\r\n    style: 'percent',\r\n    minimumFractionDigits: 1,\r\n    maximumFractionDigits: 1\r\n  }).format(value);\r\n}\r\n\r\n/**\r\n * Calculate NSSF contribution\r\n * @param {number} monthlyIncome Monthly gross income\r\n * @param {Object} nssfTiers NSSF tier options\r\n * @returns {number} Monthly NSSF contribution\r\n */\r\nexport function calculateNSSFContribution(monthlyIncome, nssfTiers = { includeTierI: true, includeTierII: true }) {\r\n  const nssfCalc = calculateNSSFByTier(monthlyIncome, nssfTiers);\r\n  return nssfCalc.total;\r\n}\r\n\r\n/**\r\n * Calculate NSSF contribution by tier\r\n * @param {number} monthlyIncome Monthly gross income\r\n * @param {Object} options NSSF calculation options\r\n * @returns {Object} NSSF contributions by tier\r\n */\r\nexport function calculateNSSFByTier(monthlyIncome, { includeTierI = true, includeTierII = true } = {}) {\r\n  const tierI = includeTierI \r\n    ? Math.min(monthlyIncome * TAX_CONSTANTS.NSSF_TIER_I_RATE, TAX_CONSTANTS.NSSF_TIER_I_MAX)\r\n    : 0;\r\n    \r\n  const tierII = includeTierII \r\n    ? Math.min(\r\n        Math.max(0, monthlyIncome - TAX_CONSTANTS.NSSF_TIER_I_MAX) * TAX_CONSTANTS.NSSF_TIER_II_RATE,\r\n        TAX_CONSTANTS.NSSF_TIER_II_MAX\r\n      )\r\n    : 0;\r\n\r\n  return {\r\n    tierI,\r\n    tierII,\r\n    total: tierI + tierII\r\n  };\r\n}\r\n\r\n/**\r\n * Calculate SHIF contribution\r\n * @param {number} monthlyIncome Monthly gross income\r\n * @returns {number} Monthly SHIF contribution\r\n */\r\nexport function calculateSHIFContribution(monthlyIncome) {\r\n  const contribution = monthlyIncome * TAX_CONSTANTS.SHIF_RATE;\r\n  return Math.min(Math.max(TAX_CONSTANTS.SHIF_MIN_CONTRIBUTION, contribution), TAX_CONSTANTS.SHIF_MAX_CONTRIBUTION);\r\n}\r\n\r\n/**\r\n * Calculate housing levy\r\n * @param {number} monthlyIncome Monthly gross income\r\n * @returns {number} Monthly housing levy amount\r\n */\r\nexport function calculateHousingLevy(monthlyIncome) {\r\n  return monthlyIncome * TAX_CONSTANTS.HOUSING_LEVY_RATE;\r\n}\r\n\r\n/**\r\n * Calculate tax for a specific tax bracket\r\n * @param {number} income Taxable income\r\n * @param {Object} bracket Tax bracket information\r\n * @returns {number} Tax amount for the bracket\r\n */\r\nfunction calculateBracketTax(income, bracket) {\r\n  const taxableInBracket = Math.min(\r\n    Math.max(0, income - bracket.min),\r\n    bracket.max ? bracket.max - bracket.min : Infinity\r\n  );\r\n  return taxableInBracket * bracket.rate;\r\n}\r\n\r\n/**\r\n * Calculate monthly PAYE tax\r\n * @param {number} annualTaxableIncome Annual taxable income\r\n * @param {Array} taxBrackets Tax brackets from the tax service\r\n * @returns {number} Annual PAYE tax\r\n */\r\nexport function calculatePAYE(annualTaxableIncome, taxBrackets) {\r\n  return taxBrackets.reduce((totalTax, bracket) => {\r\n    return totalTax + calculateBracketTax(annualTaxableIncome, bracket);\r\n  }, 0);\r\n}\r\n\r\n/**\r\n * Calculate insurance relief from insurance premiums\r\n * @param {number} monthlyPremium Monthly insurance premium\r\n * @returns {number} Monthly insurance relief amount\r\n */\r\nexport function calculateInsuranceRelief(monthlyPremium) {\r\n  const reliefAmount = monthlyPremium * TAX_CONSTANTS.INSURANCE_RELIEF_RATE;\r\n  return Math.min(reliefAmount, TAX_CONSTANTS.INSURANCE_RELIEF_MAX_MONTHLY);\r\n}\r\n\r\n/**\r\n * Calculate affordable housing relief from housing contributions\r\n * @param {number} monthlyContribution Monthly housing contribution\r\n * @returns {number} Monthly affordable housing relief\r\n */\r\nexport function calculateHousingRelief(monthlyContribution) {\r\n  const annualContribution = monthlyContribution * 12;\r\n  const annualRelief = Math.min(\r\n    annualContribution * TAX_CONSTANTS.HOUSING_RELIEF_RATE, \r\n    TAX_CONSTANTS.HOUSING_RELIEF_MAX_ANNUAL\r\n  );\r\n  return annualRelief / 12; // Return monthly value\r\n}\r\n\r\n/**\r\n * Calculate net income and all tax components\r\n * @param {Object} params Calculation parameters\r\n * @returns {Object} Calculation results\r\n */\r\nexport function calculateNetIncome({\r\n  annualIncome,\r\n  includeNSSF = true,\r\n  includeSHIF = true,\r\n  includeHousingLevy = true,\r\n  taxRates,\r\n  nssfTiers = { includeTierI: true, includeTierII: true },\r\n  personalRelief = TAX_CONSTANTS.PERSONAL_RELIEF,\r\n  includePersonalRelief = true,\r\n  insurancePremium = 0,\r\n  includeInsuranceRelief = false,\r\n  housingContribution = 0,\r\n  includeHousingRelief = false\r\n}) {\r\n  const monthlyIncome = annualIncome / 12;\r\n  \r\n  // Calculate statutory deductions with NSSF tiers\r\n  const nssfDetails = calculateNSSFByTier(monthlyIncome, nssfTiers);\r\n  const monthlyNSSF = includeNSSF ? nssfDetails.total : 0;\r\n  const monthlySHIF = includeSHIF ? calculateSHIFContribution(monthlyIncome) : 0;\r\n  const monthlyHousingLevy = includeHousingLevy ? calculateHousingLevy(monthlyIncome) : 0;\r\n  \r\n  // Calculate reliefs\r\n  const monthlyPersonalRelief = includePersonalRelief ? personalRelief / 12 : 0;\r\n  const monthlyInsuranceRelief = includeInsuranceRelief ? calculateInsuranceRelief(Number(insurancePremium)) : 0;\r\n  const monthlyHousingRelief = includeHousingRelief ? calculateHousingRelief(Number(housingContribution)) : 0;\r\n  const totalMonthlyRelief = monthlyPersonalRelief + monthlyInsuranceRelief + monthlyHousingRelief;\r\n  \r\n  // Calculate annual values\r\n  const annualNSSF = monthlyNSSF * 12;\r\n  const annualSHIF = monthlySHIF * 12;\r\n  const annualHousingLevy = monthlyHousingLevy * 12;\r\n  const annualTotalRelief = totalMonthlyRelief * 12;\r\n  \r\n  // Calculate taxable income (deducting pension contributions as reliefs)\r\n  const taxableIncome = annualIncome - (includeNSSF ? annualNSSF : 0);\r\n  \r\n  // Calculate PAYE\r\n  const incomeTax = calculatePAYE(taxableIncome, taxRates.brackets);\r\n  const taxAfterRelief = Math.max(0, incomeTax - annualTotalRelief);\r\n  \r\n  // Calculate total deductions and net income\r\n  const totalDeductions = taxAfterRelief + annualNSSF + annualSHIF + annualHousingLevy;\r\n  const netIncome = annualIncome - totalDeductions;\r\n  \r\n  return {\r\n    grossIncome: annualIncome,\r\n    taxableIncome,\r\n    incomeTax,\r\n    personalRelief: includePersonalRelief ? personalRelief : 0,\r\n    insuranceRelief: includeInsuranceRelief ? monthlyInsuranceRelief * 12 : 0,\r\n    housingRelief: includeHousingRelief ? monthlyHousingRelief * 12 : 0,\r\n    totalRelief: annualTotalRelief,\r\n    nssfContribution: annualNSSF,\r\n    nssfTierI: nssfDetails.tierI * 12,\r\n    nssfTierII: nssfDetails.tierII * 12,\r\n    shifContribution: annualSHIF,\r\n    housingLevy: annualHousingLevy,\r\n    taxAfterRelief,\r\n    totalDeductions,\r\n    netIncome,\r\n    monthlyGross: monthlyIncome,\r\n    monthlyNet: netIncome / 12,\r\n    monthlyDeductions: totalDeductions / 12,\r\n    effectiveTaxRate: totalDeductions / annualIncome,\r\n    payeTax: taxAfterRelief, // Adding for cleaner reference in UI\r\n    monthlyBreakdown: {\r\n      grossPay: monthlyIncome,\r\n      nssf: monthlyNSSF,\r\n      nssfTierI: nssfDetails.tierI,\r\n      nssfTierII: nssfDetails.tierII,\r\n      shif: monthlySHIF,\r\n      housingLevy: monthlyHousingLevy,\r\n      taxableIncome: taxableIncome / 12,\r\n      paye: taxAfterRelief / 12,\r\n      personalRelief: monthlyPersonalRelief,\r\n      insuranceRelief: monthlyInsuranceRelief,\r\n      housingRelief: monthlyHousingRelief,\r\n      totalRelief: totalMonthlyRelief,\r\n      netPay: netIncome / 12\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Calculate gross income from net pay\r\n * @param {number} targetNetPay Desired net monthly pay\r\n * @param {Object} options Calculation options\r\n * @returns {number} Required gross income\r\n */\r\nexport function calculateGrossFromNet(targetNetPay, {\r\n  includeNSSF = true,\r\n  includeSHIF = true,\r\n  includeHousingLevy = true,\r\n  taxRates,\r\n  nssfTiers = { includeTierI: true, includeTierII: true },\r\n  personalRelief = TAX_CONSTANTS.PERSONAL_RELIEF,\r\n  includePersonalRelief = true,\r\n  includeInsuranceRelief = false,\r\n  insurancePremium = 0,\r\n  includeHousingRelief = false,\r\n  housingContribution = 0\r\n} = {}) {\r\n  let low = targetNetPay;\r\n  let high = targetNetPay * 3; // Initial upper bound\r\n  let iterations = 0;\r\n  const maxIterations = 20;\r\n  const tolerance = 0.01;\r\n\r\n  while (iterations < maxIterations) {\r\n    const testGross = (low + high) / 2;\r\n    const result = calculateNetIncome({\r\n      annualIncome: testGross * 12,\r\n      includeNSSF,\r\n      includeSHIF,\r\n      includeHousingLevy,\r\n      taxRates,\r\n      nssfTiers,\r\n      personalRelief,\r\n      includePersonalRelief,\r\n      includeInsuranceRelief,\r\n      insurancePremium,\r\n      includeHousingRelief,\r\n      housingContribution\r\n    });\r\n\r\n    const testNet = result.monthlyNet;\r\n    const diff = testNet - targetNetPay;\r\n\r\n    if (Math.abs(diff) < tolerance) {\r\n      return testGross * 12;\r\n    }\r\n\r\n    if (diff > 0) {\r\n      high = testGross;\r\n    } else {\r\n      low = testGross;\r\n    }\r\n\r\n    iterations++;\r\n  }\r\n\r\n  // Return best approximation after max iterations\r\n  return (low + high) / 2 * 12;\r\n}\r\n\r\n/**\r\n * Generate monthly breakdown of income and deductions\r\n * @param {Object} calculation Tax calculation results\r\n * @returns {Array} Monthly breakdown\r\n */\r\nexport function generateMonthlyBreakdown(calculation) {\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n  \r\n  return months.map(name => ({\r\n    name,\r\n    gross: calculation.monthlyGross,\r\n    deductions: calculation.monthlyDeductions,\r\n    net: calculation.monthlyNet\r\n  }));\r\n}\r\n\r\n/**\r\n * Generate tax calculation summary for reports\r\n * @param {Object} calculation Tax calculation results\r\n * @returns {Object} Summary object\r\n */\r\nexport function generateTaxSummary(calculation) {\r\n  return {\r\n    summary: {\r\n      annualGrossIncome: calculation.grossIncome,\r\n      annualNetIncome: calculation.netIncome,\r\n      totalTax: calculation.taxAfterRelief,\r\n      totalDeductions: calculation.totalDeductions,\r\n      effectiveTaxRate: calculation.effectiveTaxRate\r\n    },\r\n    monthly: {\r\n      grossIncome: calculation.monthlyGross,\r\n      netIncome: calculation.monthlyNet,\r\n      deductions: calculation.monthlyDeductions\r\n    },\r\n    deductions: {\r\n      incomeTax: calculation.taxAfterRelief,\r\n      nssf: calculation.nssfContribution,\r\n      shif: calculation.shifContribution,\r\n      personalRelief: calculation.personalRelief\r\n    },\r\n    breakdown: generateMonthlyBreakdown(calculation)\r\n  };\r\n}\r\n\r\n/**\r\n * Calculate Digital Service Tax\r\n * @param {number} grossIncome Gross income\r\n * @returns {number} Digital Service Tax amount\r\n */\r\nexport function calculateDigitalServiceTax(grossIncome) {\r\n  return grossIncome * TAX_CONSTANTS.DIGITAL_SERVICE_TAX_RATE;\r\n}","<template>\r\n  <div class=\"w-full\">\r\n    <label v-if=\"label\" :for=\"id\" class=\"block text-sm font-medium text-gray-700 mb-1\">{{ label }}</label>\r\n    <div class=\"relative\">\r\n      <input\r\n        :id=\"id\"\r\n        :type=\"actualType\"\r\n        :value=\"displayValue\"\r\n        :placeholder=\"placeholder\"\r\n        :disabled=\"disabled\"\r\n        :required=\"required\"\r\n        :class=\"[\r\n          'input-field',\r\n          error ? 'input-error' : '',\r\n          disabled ? 'bg-gray-50 text-gray-500 cursor-not-allowed' : '',\r\n          rounded ? 'rounded-lg' : 'rounded-none'\r\n        ]\"\r\n        @input=\"handleInput\"\r\n        @blur=\"handleBlur\"\r\n      />\r\n      <div v-if=\"error\" class=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\r\n        <svg class=\"h-5 w-5 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    <p v-if=\"error\" class=\"mt-1 text-sm text-red-600\">{{ error }}</p>\r\n    <p v-if=\"hint\" class=\"mt-1 text-sm text-gray-500\">{{ hint }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, watch } from 'vue';\r\n\r\nexport default {\r\n  name: 'InputField',\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    modelValue: {\r\n      type: [String, Number],\r\n      default: ''\r\n    },\r\n    label: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'text'\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    error: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    required: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    formatNumber: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    decimalPlaces: {\r\n      type: Number,\r\n      default: 2\r\n    }\r\n  },\r\n  emits: ['update:modelValue', 'input'],\r\n  setup(props, { emit }) {\r\n    const inputValue = ref(props.modelValue);\r\n    \r\n    // Format number with commas\r\n    const formatWithCommas = (value) => {\r\n      if (value === '' || value === null || value === undefined) return '';\r\n      \r\n      // Remove existing commas first\r\n      let plainValue = String(value).replace(/,/g, '');\r\n      \r\n      // Handle decimal places\r\n      let parts = plainValue.split('.');\r\n      let wholePart = parts[0];\r\n      let decimalPart = parts.length > 1 ? parts[1] : '';\r\n      \r\n      // Format with commas for thousands\r\n      let formattedWhole = wholePart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n      \r\n      // Add decimal part back if needed\r\n      if (props.decimalPlaces > 0 && parts.length > 1) {\r\n        // Truncate or pad decimal places\r\n        decimalPart = decimalPart.padEnd(props.decimalPlaces, '0').slice(0, props.decimalPlaces);\r\n        return `${formattedWhole}.${decimalPart}`;\r\n      }\r\n      \r\n      return formattedWhole;\r\n    };\r\n    \r\n    // Display formatted value\r\n    const displayValue = computed(() => {\r\n      if (props.formatNumber && inputValue.value !== '') {\r\n        return formatWithCommas(inputValue.value);\r\n      }\r\n      return inputValue.value;\r\n    });\r\n\r\n    // For formatted numbers, we'll always use text input\r\n    // This prevents browser validation issues with the comma separators\r\n    const actualType = computed(() => {\r\n      return props.formatNumber ? 'text' : props.type;\r\n    });\r\n    \r\n    // Handle input changes\r\n    const handleInput = (event) => {\r\n      let newValue = event.target.value;\r\n      \r\n      if (props.formatNumber) {\r\n        // Store the raw value (without commas) in the model\r\n        let rawValue = newValue.replace(/,/g, '');\r\n        \r\n        if (props.type === 'number' && rawValue !== '') {\r\n          // Ensure it's a valid number\r\n          if (!/^-?\\d*\\.?\\d*$/.test(rawValue)) {\r\n            return;\r\n          }\r\n        }\r\n        \r\n        // Update the internal value\r\n        inputValue.value = rawValue;\r\n        \r\n        // Emit the raw value\r\n        emit('update:modelValue', rawValue);\r\n        emit('input', rawValue);\r\n      } else {\r\n        // For non-formatted fields, just pass through\r\n        inputValue.value = newValue;\r\n        emit('update:modelValue', newValue);\r\n        emit('input', newValue);\r\n      }\r\n    };\r\n\r\n    // Handle blur event - reformat the value on blur\r\n    const handleBlur = () => {\r\n      if (props.formatNumber && inputValue.value !== '') {\r\n        // Emit the same value to trigger the formatter\r\n        emit('update:modelValue', inputValue.value);\r\n      }\r\n    };\r\n    \r\n    // Update local value when prop changes\r\n    watch(() => props.modelValue, (newValue) => {\r\n      inputValue.value = newValue;\r\n    });\r\n    \r\n    return {\r\n      inputValue,\r\n      displayValue,\r\n      actualType,\r\n      handleInput,\r\n      handleBlur\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.input-field {\r\n  @apply w-full rounded-md border-gray-300 shadow-sm transition-colors duration-200;\r\n}\r\n\r\n.input-field:focus {\r\n  @apply border-green-600 ring-2 ring-green-600 ring-opacity-50 outline-none;\r\n}\r\n\r\n.input-error {\r\n  @apply border-red-300;\r\n}\r\n\r\n.input-error:focus {\r\n  @apply border-red-500 ring-red-500;\r\n}\r\n</style>","import { render } from \"./InputField.vue?vue&type=template&id=7250fa50&scoped=true\"\nimport script from \"./InputField.vue?vue&type=script&lang=js\"\nexport * from \"./InputField.vue?vue&type=script&lang=js\"\n\nimport \"./InputField.vue?vue&type=style&index=0&id=7250fa50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7250fa50\"]])\n\nexport default __exports__","import { db } from '../firebase';\r\nimport {\r\n  doc,\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  setDoc,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  deleteDoc\r\n} from 'firebase/firestore';\r\n\r\nconst COLLECTIONS = {\r\n  TAX_RATES: 'taxRates',\r\n  CALCULATIONS: 'calculations',\r\n  SETTINGS: 'settings'\r\n};\r\n\r\n// Default tax rates to use when offline or unauthenticated\r\nexport const DEFAULT_TAX_RATES = {\r\n  year: 2024,\r\n  personalRelief: 28800, // Annual personal relief\r\n  brackets: [\r\n    { min: 0, max: 288000, rate: 0.10 },\r\n    { min: 288000, max: 388000, rate: 0.25 },\r\n    { min: 388000, max: 6000000, rate: 0.30 },\r\n    { min: 6000000, max: 9600000, rate: 0.32 },\r\n    { min: 9600000, max: null, rate: 0.35 }\r\n  ]\r\n};\r\n\r\n// Default settings for offline or unauthenticated users\r\nexport const DEFAULT_SETTINGS = {\r\n  currency: 'KES',\r\n  countryCode: 'KE',\r\n  taxYearStart: 1, // January\r\n  personalReliefEnabled: true,\r\n  nssfEnabled: true,\r\n  shifEnabled: true\r\n};\r\n\r\n/**\r\n * Get tax rates for a specific year\r\n * @param {number} year Tax year\r\n * @returns {Promise<Object>} Tax rates and brackets\r\n */\r\nexport async function getTaxRates(year) {\r\n  try {\r\n    const ratesDoc = doc(db, COLLECTIONS.TAX_RATES, year.toString());\r\n    const ratesSnapshot = await getDoc(ratesDoc);\r\n    \r\n    if (!ratesSnapshot.exists()) {\r\n      return DEFAULT_TAX_RATES;\r\n    }\r\n\r\n    return ratesSnapshot.data();\r\n  } catch (error) {\r\n    console.warn('Error fetching tax rates:', error);\r\n    return DEFAULT_TAX_RATES;\r\n  }\r\n}\r\n\r\n/**\r\n * Save a tax calculation\r\n * @param {string} userId User ID\r\n * @param {Object} calculation Tax calculation details\r\n * @returns {Promise<void>}\r\n */\r\nexport async function saveTaxCalculation(userId, calculation) {\r\n  const calculationRef = doc(collection(db, COLLECTIONS.CALCULATIONS));\r\n  await setDoc(calculationRef, {\r\n    userId,\r\n    timestamp: new Date(),\r\n    ...calculation\r\n  });\r\n}\r\n\r\n/**\r\n * Get user's tax calculations history\r\n * @param {string} userId User ID\r\n * @param {number} limit Maximum number of calculations to retrieve\r\n * @returns {Promise<Array>} Array of calculations\r\n */\r\nexport async function getUserCalculations(userId, limit = 10) {\r\n  const calculationsQuery = query(\r\n    collection(db, COLLECTIONS.CALCULATIONS),\r\n    where('userId', '==', userId),\r\n    orderBy('timestamp', 'desc'),\r\n    limit(limit)\r\n  );\r\n  \r\n  const querySnapshot = await getDocs(calculationsQuery);\r\n  return querySnapshot.docs.map(doc => ({\r\n    id: doc.id,\r\n    ...doc.data()\r\n  }));\r\n}\r\n\r\n/**\r\n * Get tax settings\r\n * @returns {Promise<Object>} Tax settings\r\n */\r\nexport async function getTaxSettings() {\r\n  try {\r\n    const settingsDoc = doc(db, COLLECTIONS.SETTINGS, 'default');\r\n    const settingsSnapshot = await getDoc(settingsDoc);\r\n    \r\n    if (!settingsSnapshot.exists()) {\r\n      return DEFAULT_SETTINGS;\r\n    }\r\n\r\n    return settingsSnapshot.data();\r\n  } catch (error) {\r\n    console.warn('Error fetching tax settings:', error);\r\n    return DEFAULT_SETTINGS;\r\n  }\r\n}\r\n\r\n/**\r\n * Update tax settings\r\n * @param {Object} settings New tax settings\r\n * @returns {Promise<void>}\r\n */\r\nexport async function updateTaxSettings(settings) {\r\n  const settingsDoc = doc(db, COLLECTIONS.SETTINGS, 'default');\r\n  await setDoc(settingsDoc, settings, { merge: true });\r\n}\r\n\r\n/**\r\n * Update tax rates\r\n * @param {Object} rates Tax rates and brackets\r\n * @returns {Promise<void>}\r\n */\r\nexport async function updateTaxRates(rates) {\r\n  const year = new Date().getFullYear();\r\n  const ratesDoc = doc(db, COLLECTIONS.TAX_RATES, year.toString());\r\n  await setDoc(ratesDoc, {\r\n    ...rates,\r\n    year,\r\n    updatedAt: new Date()\r\n  });\r\n}\r\n\r\n/**\r\n * Delete a saved calculation\r\n * @param {string} calculationId Calculation ID\r\n * @returns {Promise<void>}\r\n */\r\nexport async function deleteCalculation(calculationId) {\r\n  const calculationDoc = doc(db, COLLECTIONS.CALCULATIONS, calculationId);\r\n  await deleteDoc(calculationDoc);\r\n}","<template>\r\n  <button\r\n    :type=\"type\"\r\n    :class=\"[\r\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md text-center',\r\n      'border font-medium shadow-sm w-auto transition-all duration-200 ease-in-out',\r\n      'disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2',\r\n      sizeClasses,\r\n      variantClasses,\r\n      { 'flex-nowrap': !allowWrap }\r\n    ]\"\r\n    :disabled=\"disabled || loading\"\r\n    @click=\"$emit('click', $event)\"\r\n  >\r\n    <svg\r\n      v-if=\"loading\"\r\n      class=\"animate-spin flex-shrink-0 mr-2\"\r\n      :class=\"iconSizeClass\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\" />\r\n      <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\r\n    </svg>\r\n    <span :class=\"{ 'truncate': truncateText }\">\r\n      <slot></slot>\r\n    </span>\r\n    <slot name=\"right-icon\"></slot>\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'BaseButton',\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: 'button',\r\n      validator: (value) => ['button', 'submit', 'reset'].includes(value)\r\n    },\r\n    variant: {\r\n      type: String,\r\n      default: 'primary',\r\n      validator: (value) => ['primary', 'secondary', 'gradient', 'white', 'outline', 'kenya'].includes(value)\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: 'default',\r\n      validator: (value) => ['small', 'default', 'large'].includes(value)\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    loading: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    allowWrap: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    truncateText: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    iconPosition: {\r\n      type: String,\r\n      default: 'right',\r\n      validator: (value) => ['left', 'right'].includes(value)\r\n    }\r\n  },\r\n  computed: {\r\n    variantClasses() {\r\n      const variants = {\r\n        primary: 'border-transparent bg-green-600 text-white hover:bg-green-500 focus:ring-green-600',\r\n        secondary: 'border-gray-300 bg-white text-gray-700 hover:bg-gray-50 hover:border-green-500 focus:ring-green-600',\r\n        gradient: 'border-transparent bg-gradient-to-r from-green-600 via-green-500 to-green-600 text-white hover:from-green-500 hover:via-green-400 hover:to-green-500 focus:ring-green-600 rounded-full',\r\n        kenya: 'border-transparent bg-green-600 text-white hover:bg-green-500 focus:ring-green-600',\r\n        white: 'border-transparent bg-white text-gray-900 hover:bg-gray-50 hover:text-green-600 focus:ring-green-600',\r\n        outline: 'border-green-600 bg-transparent text-green-600 hover:bg-green-50 focus:ring-green-600'\r\n      };\r\n      return variants[this.variant];\r\n    },\r\n    sizeClasses() {\r\n      const sizes = {\r\n        small: 'px-3 py-1.5 text-sm gap-1.5',\r\n        default: 'px-4 py-2 text-sm gap-2',\r\n        large: 'px-6 py-3 text-base gap-2.5'\r\n      };\r\n      return sizes[this.size];\r\n    },\r\n    iconSizeClass() {\r\n      const sizes = {\r\n        small: 'h-3.5 w-3.5',\r\n        default: 'h-4 w-4',\r\n        large: 'h-5 w-5'\r\n      };\r\n      return sizes[this.size];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.flex-nowrap {\r\n  white-space: nowrap;\r\n}\r\n\r\n.inline-flex {\r\n  display: inline-flex;\r\n  align-items: center;\r\n}\r\n</style>","import { render } from \"./Button.vue?vue&type=template&id=7d8b5a0b&scoped=true\"\nimport script from \"./Button.vue?vue&type=script&lang=js\"\nexport * from \"./Button.vue?vue&type=script&lang=js\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=7d8b5a0b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7d8b5a0b\"]])\n\nexport default __exports__"],"names":["TAX_CONSTANTS","PERSONAL_RELIEF","NSSF_TIER_I_MAX","NSSF_TIER_II_MAX","NSSF_RATE","SHIF_RATE","SHIF_MIN_CONTRIBUTION","SHIF_MAX_CONTRIBUTION","HOUSING_LEVY_RATE","VAT_RATE","DIGITAL_SERVICE_TAX_RATE","TAX_BRACKETS","min","max","rate","NSSF_TIER_I_RATE","NSSF_TIER_II_RATE","INSURANCE_RELIEF_RATE","INSURANCE_RELIEF_MAX_MONTHLY","HOUSING_RELIEF_RATE","HOUSING_RELIEF_MAX_ANNUAL","BILLING_CONSTANTS","MINIMUM_HOURLY_RATES","designer","writer","musician","photographer","videographer","animator","general","formatCurrency","amount","value","Number","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatPercentage","Intl","NumberFormat","style","format","calculateNSSFByTier","monthlyIncome","includeTierI","includeTierII","tierI","Math","tierII","total","calculateSHIFContribution","contribution","calculateHousingLevy","calculateBracketTax","income","bracket","taxableInBracket","Infinity","calculatePAYE","annualTaxableIncome","taxBrackets","reduce","totalTax","calculateInsuranceRelief","monthlyPremium","reliefAmount","calculateHousingRelief","monthlyContribution","annualContribution","annualRelief","calculateNetIncome","annualIncome","includeNSSF","includeSHIF","includeHousingLevy","taxRates","nssfTiers","personalRelief","includePersonalRelief","insurancePremium","includeInsuranceRelief","housingContribution","includeHousingRelief","nssfDetails","monthlyNSSF","monthlySHIF","monthlyHousingLevy","monthlyPersonalRelief","monthlyInsuranceRelief","monthlyHousingRelief","totalMonthlyRelief","annualNSSF","annualSHIF","annualHousingLevy","annualTotalRelief","taxableIncome","incomeTax","brackets","taxAfterRelief","totalDeductions","netIncome","grossIncome","insuranceRelief","housingRelief","totalRelief","nssfContribution","nssfTierI","nssfTierII","shifContribution","housingLevy","monthlyGross","monthlyNet","monthlyDeductions","effectiveTaxRate","payeTax","monthlyBreakdown","grossPay","nssf","shif","paye","netPay","calculateGrossFromNet","targetNetPay","low","high","iterations","maxIterations","tolerance","testGross","result","testNet","diff","abs","generateMonthlyBreakdown","calculation","months","map","name","gross","deductions","net","generateTaxSummary","summary","annualGrossIncome","annualNetIncome","monthly","breakdown","calculateDigitalServiceTax","class","key","_createElementBlock","_hoisted_1","$props","label","for","id","_hoisted_2","_createCommentVNode","_createElementVNode","_hoisted_3","type","$setup","actualType","displayValue","placeholder","disabled","required","_normalizeClass","error","_ctx","rounded","onInput","_cache","args","handleInput","onBlur","handleBlur","_hoisted_4","_hoisted_5","xmlns","viewBox","fill","d","_hoisted_6","_toDisplayString","hint","_hoisted_7","props","String","modelValue","default","Boolean","formatNumber","decimalPlaces","emits","setup","emit","inputValue","ref","formatWithCommas","undefined","plainValue","replace","parts","split","wholePart","decimalPart","length","formattedWhole","padEnd","slice","computed","event","newValue","target","rawValue","test","watch","__exports__","render","COLLECTIONS","TAX_RATES","CALCULATIONS","SETTINGS","DEFAULT_TAX_RATES","year","DEFAULT_SETTINGS","currency","countryCode","taxYearStart","personalReliefEnabled","nssfEnabled","shifEnabled","async","getTaxRates","ratesDoc","doc","db","toString","ratesSnapshot","getDoc","exists","data","console","warn","saveTaxCalculation","userId","calculationRef","collection","setDoc","timestamp","Date","getUserCalculations","limit","calculationsQuery","query","where","orderBy","querySnapshot","getDocs","docs","getTaxSettings","settingsDoc","settingsSnapshot","updateTaxRates","rates","getFullYear","updatedAt","$options","sizeClasses","variantClasses","allowWrap","loading","onClick","$event","$emit","iconSizeClass","cx","cy","r","stroke","truncateText","_renderSlot","$slots","validator","includes","variant","size","iconPosition","variants","primary","secondary","gradient","kenya","white","outline","this","sizes","small","large"],"sourceRoot":""}