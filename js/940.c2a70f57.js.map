{"version":3,"file":"js/940.c2a70f57.js","mappings":"yVAGO,MAAMA,EAAgB,CAC3BC,gBAAiB,MACjBC,gBAAiB,KACjBC,iBAAkB,KAClBC,UAAW,KACXC,UAAW,MACXC,sBAAuB,IACvBC,sBAAuB,IACvBC,kBAAmB,KACnBC,SAAU,IACVC,yBAA0B,KAC1BC,2BAA4B,IAC5BC,aAAc,CACZ,CAAEC,IAAK,EAAGC,IAAK,KAAOC,KAAM,IAC5B,CAAEF,IAAK,KAAOC,IAAK,MAAOC,KAAM,IAChC,CAAEF,IAAK,MAAOC,IAAK,IAAQC,KAAM,IACjC,CAAEF,IAAK,IAAQC,IAAK,IAAQC,KAAM,MAClC,CAAEF,IAAK,IAAQC,IAAK,KAAMC,KAAM,KAElCC,iBAAkB,KAClBC,kBAAmB,MAqCd,SAASC,EAAeC,GAC7B,OAAO,IAAIC,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOP,EACZ,CAOO,SAASQ,EAAiBC,GAC/B,OAAO,IAAIR,KAAKC,aAAa,QAAS,CACpCC,MAAO,UACPE,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOE,EACZ,CAmBO,SAASC,EAAoBC,GAAe,aAAEC,GAAe,EAAI,cAAEC,GAAgB,GAAS,CAAC,GAClG,MAAMC,EAAQF,EACVG,KAAKrB,IAAIiB,EAAgB9B,EAAcgB,iBAAkBhB,EAAcE,iBACvE,EAEEiC,EAASH,EACXE,KAAKrB,IACHqB,KAAKpB,IAAI,EAAGgB,EAAgB9B,EAAcE,iBAAmBF,EAAciB,kBAC3EjB,EAAcG,kBAEhB,EAEJ,MAAO,CACL8B,QACAE,SACAC,MAAOH,EAAQE,EAEnB,CAOO,SAASE,EAA0BP,GACxC,MAAMQ,EAAeR,EAAgB9B,EAAcK,UACnD,OAAO6B,KAAKrB,IAAIqB,KAAKpB,IAAId,EAAcM,sBAAuBgC,GAAetC,EAAcO,sBAC7F,CAOO,SAASgC,EAAqBT,GACnC,OAAOA,EAAgB9B,EAAcQ,iBACvC,CAQA,SAASgC,EAAoBC,EAAQC,GACnC,MAAMC,EAAmBT,KAAKrB,IAC5BqB,KAAKpB,IAAI,EAAG2B,EAASC,EAAQ7B,KAC7B6B,EAAQ5B,IAAM4B,EAAQ5B,IAAM4B,EAAQ7B,IAAM+B,KAE5C,OAAOD,EAAmBD,EAAQ3B,IACpC,CAQO,SAAS8B,EAAcC,EAAqBC,GACjD,OAAOA,EAAYC,QAAO,CAACC,EAAUP,IAC5BO,EAAWT,EAAoBM,EAAqBJ,IAC1D,EACL,CAOO,SAASQ,GAAmB,aACjCC,EAAY,YACZC,GAAc,EAAI,YAClBC,GAAc,EAAI,mBAClBC,GAAqB,EAAI,SACzBC,EAAQ,UACRC,EAAY,CAAEzB,cAAc,EAAMC,eAAe,GAAM,eACvDyB,EAAiBzD,EAAcC,kBAE/B,MAAM6B,EAAgBqB,EAAe,GAG/BO,EAAc7B,EAAoBC,EAAe0B,GACjDG,EAAcP,EAAcM,EAAYtB,MAAQ,EAChDwB,EAAcP,EAAchB,EAA0BP,GAAiB,EACvE+B,EAAqBP,EAAqBf,EAAqBT,GAAiB,EAGhFgC,EAA2B,GAAdH,EACbI,EAA2B,GAAdH,EACbI,EAAyC,GAArBH,EAGpBI,EAAgBd,GAAgBC,EAAcU,EAAa,IAC9DT,EAAcU,EAAa,IAAMT,EAAqBU,EAAoB,GAGvEE,EAAYrB,EAAcoB,EAAeV,EAASY,UAClDC,EAAiBlC,KAAKpB,IAAI,EAAGoD,EAAYT,GAGzCY,EAAkBD,EAAiBN,EAAaC,EAAaC,EAC7DM,EAAYnB,EAAekB,EAEjC,MAAO,CACLE,YAAapB,EACbc,gBACAC,YACAT,iBACAe,iBAAkBV,EAClBW,UAA+B,GAApBf,EAAYzB,MACvByC,WAAiC,GAArBhB,EAAYvB,OACxBwC,iBAAkBZ,EAClBa,YAAaZ,EACbI,iBACAC,kBACAC,YACAO,aAAc/C,EACdgD,WAAYR,EAAY,GACxBS,kBAAmBV,EAAkB,GACrCW,iBAAkBX,EAAkBlB,EACpC8B,iBAAkB,CAChBC,SAAUpD,EACVqD,KAAMxB,EACNc,UAAWf,EAAYzB,MACvByC,WAAYhB,EAAYvB,OACxBiD,KAAMxB,EACNgB,YAAaf,EACbI,cAAeA,EAAgB,GAC/BoB,KAAMjB,EAAiB,GACvBX,eAAgBA,EAAiB,GACjC6B,OAAQhB,EAAY,IAG1B,CAQO,SAASiB,EAAsBC,GAAc,YAClDpC,GAAc,EAAI,YAClBC,GAAc,EAAI,mBAClBC,GAAqB,EAAI,SACzBC,EAAQ,UACRC,EAAY,CAAEzB,cAAc,EAAMC,eAAe,GAAM,eACvDyB,EAAiBzD,EAAcC,iBAC7B,CAAC,GACH,IAAIwF,EAAMD,EACNE,EAAsB,EAAfF,EACPG,EAAa,EACjB,MAAMC,EAAgB,GAChBC,EAAY,IAElB,MAAOF,EAAaC,EAAe,CACjC,MAAME,GAAaL,EAAMC,GAAQ,EAC3BK,EAAS7C,EAAmB,CAChCC,aAA0B,GAAZ2C,EACd1C,cACAC,cACAC,qBACAC,WACAC,YACAC,mBAGIuC,EAAUD,EAAOjB,WACjBmB,EAAOD,EAAUR,EAEvB,GAAItD,KAAKgE,IAAID,GAAQJ,EACnB,OAAmB,GAAZC,EAGLG,EAAO,EACTP,EAAOI,EAEPL,EAAMK,EAGRH,GACF,CAGA,OAAQF,EAAMC,GAAQ,EAAI,EAC5B,CAOO,SAASS,EAAyBC,GACvC,MAAMC,EAAS,CACb,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGxD,OAAOA,EAAOC,KAAIC,IAAQ,CACxBA,OACAC,MAAOJ,EAAYvB,aACnB4B,WAAYL,EAAYrB,kBACxB2B,IAAKN,EAAYtB,cAErB,CAOO,SAAS6B,EAAmBP,GACjC,MAAO,CACLQ,QAAS,CACPC,kBAAmBT,EAAY7B,YAC/BuC,gBAAiBV,EAAY9B,UAC7BrB,SAAUmD,EAAYhC,eACtBC,gBAAiB+B,EAAY/B,gBAC7BW,iBAAkBoB,EAAYpB,kBAEhC+B,QAAS,CACPxC,YAAa6B,EAAYvB,aACzBP,UAAW8B,EAAYtB,WACvB2B,WAAYL,EAAYrB,mBAE1B0B,WAAY,CACVvC,UAAWkC,EAAYhC,eACvBe,KAAMiB,EAAY5B,iBAClBY,KAAMgB,EAAYzB,iBAClBlB,eAAgB2C,EAAY3C,gBAE9BuD,UAAWb,EAAyBC,GAExC,CAOO,SAASa,EAA2B1C,GACzC,OAAOA,EAAcvE,EAAcU,wBACrC,C,+LCxUA,MAAMwG,EAAc,CAClBC,UAAW,WACXC,aAAc,eACdC,SAAU,YAICC,EAAoB,CAC/BC,KAAM,KACN9D,eAAgB,MAChBU,SAAU,CACR,CAAEtD,IAAK,EAAGC,IAAK,MAAQC,KAAM,IAC7B,CAAEF,IAAK,MAAQC,IAAK,MAAQC,KAAM,KAClC,CAAEF,IAAK,MAAQC,IAAK,IAASC,KAAM,IACnC,CAAEF,IAAK,IAASC,IAAK,KAASC,KAAM,KACpC,CAAEF,IAAK,KAASC,IAAK,KAAMC,KAAM,OAKxByG,EAAmB,CAC9BjG,SAAU,MACVkG,YAAa,KACbC,aAAc,EACdC,uBAAuB,EACvBC,aAAa,EACbC,aAAa,GAQRC,eAAeC,EAAYR,GAChC,IACE,MAAMS,GAAWC,EAAAA,EAAAA,IAAIC,EAAAA,GAAIhB,EAAYC,UAAWI,EAAKY,YAC/CC,QAAsBC,EAAAA,EAAAA,IAAOL,GAEnC,OAAKI,EAAcE,SAIZF,EAAcG,OAHZjB,CAIX,CAAE,MAAOkB,GAEP,OADAC,QAAQC,KAAK,4BAA6BF,GACnClB,CACT,CACF,CAQOQ,eAAea,EAAmBC,EAAQxC,GAC/C,MAAMyC,GAAiBZ,EAAAA,EAAAA,KAAIa,EAAAA,EAAAA,IAAWZ,EAAAA,GAAIhB,EAAYE,qBAChD2B,EAAAA,EAAAA,IAAOF,EAAgB,CAC3BD,SACAI,UAAW,IAAIC,QACZ7C,GAEP,CAQO0B,eAAeoB,EAAoBN,EAAQO,EAAQ,IACxD,MAAMC,GAAoBC,EAAAA,EAAAA,IACxBP,EAAAA,EAAAA,IAAWZ,EAAAA,GAAIhB,EAAYE,eAC3BkC,EAAAA,EAAAA,IAAM,SAAU,KAAMV,IACtBW,EAAAA,EAAAA,IAAQ,YAAa,QACrBJ,EAAMA,IAGFK,QAAsBC,EAAAA,EAAAA,IAAQL,GACpC,OAAOI,EAAcE,KAAKpD,KAAI2B,IAAO,CACnC0B,GAAI1B,EAAI0B,MACL1B,EAAIM,UAEX,CAMOT,eAAe8B,IACpB,IACE,MAAMC,GAAc5B,EAAAA,EAAAA,IAAIC,EAAAA,GAAIhB,EAAYG,SAAU,WAC5CyC,QAAyBzB,EAAAA,EAAAA,IAAOwB,GAEtC,OAAKC,EAAiBxB,SAIfwB,EAAiBvB,OAHff,CAIX,CAAE,MAAOgB,GAEP,OADAC,QAAQC,KAAK,+BAAgCF,GACtChB,CACT,CACF,CAiBOM,eAAeiC,EAAeC,GACnC,MAAMzC,GAAO,IAAI0B,MAAOgB,cAClBjC,GAAWC,EAAAA,EAAAA,IAAIC,EAAAA,GAAIhB,EAAYC,UAAWI,EAAKY,kBAC/CY,EAAAA,EAAAA,IAAOf,EAAU,IAClBgC,EACHzC,OACA2C,UAAW,IAAIjB,MAEnB,C,wFC7IOkB,MAAM,U,EADb,Q,GAGSA,MAAM,Y,EAHf,0D,GAAAC,IAAA,EAoBwBD,MAAM,yE,GApB9BC,IAAA,EA0BoBD,MAAM,6B,GA1B1BC,IAAA,EA2BmBD,MAAM,8B,0CA1BvBE,EAAAA,EAAAA,IA2BM,MA3BNC,EA2BM,CA1BSC,EAAAC,QAAK,WAAlBH,EAAAA,EAAAA,IAAsG,SAF1GD,IAAA,EAEyBK,IAAKF,EAAAZ,GAAIQ,MAAM,iD,QAAkDI,EAAAC,OAAK,EAF/FE,KAAAC,EAAAA,EAAAA,IAAA,QAGIC,EAAAA,EAAAA,IAsBM,MAtBNC,EAsBM,EArBJD,EAAAA,EAAAA,IAeE,SAdCjB,GAAIY,EAAAZ,GACJmB,KAAMP,EAAAO,KACNlJ,MAAO2I,EAAAQ,WACPC,YAAaT,EAAAS,YACbC,SAAUV,EAAAU,SACVC,SAAUX,EAAAW,SACVf,OAXTgB,EAAAA,EAAAA,IAAA,eAWuDZ,EAAA/B,MAAK,iBAAkC+B,EAAAU,SAAQ,iDAAkEV,EAAAa,QAAO,8BAMtKC,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,MAAM,oBAAqBF,EAAOG,OAAO9J,QAChD+J,OAAIL,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,MAAM,OAAQF,K,QAlB7BK,GAoBiBrB,EAAA/B,QAAK,WAAhB6B,EAAAA,EAAAA,IAIM,MAJNwB,EAIMP,EAAA,KAAAA,EAAA,KAHJV,EAAAA,EAAAA,IAEM,OAFDT,MAAM,uBAAuB2B,MAAM,6BAA6BC,QAAQ,YAAYC,KAAK,gB,EAC5FpB,EAAAA,EAAAA,IAAsK,QAAhK,YAAU,UAAUqB,EAAE,oHAAoH,YAAU,c,QAtBpKtB,EAAAA,EAAAA,IAAA,SA0BaJ,EAAA/B,QAAK,WAAd6B,EAAAA,EAAAA,IAAiE,IAAjE6B,GAAiEC,EAAAA,EAAAA,IAAZ5B,EAAA/B,OAAK,KA1B9DmC,EAAAA,EAAAA,IAAA,OA2BaJ,EAAA6B,OAAI,WAAb/B,EAAAA,EAAAA,IAAgE,IAAhEgC,GAAgEF,EAAAA,EAAAA,IAAX5B,EAAA6B,MAAI,KA3B7DzB,EAAAA,EAAAA,IAAA,Q,CAgCA,OACEpE,KAAM,aACN+F,MAAO,CACL3C,GAAI,CACFmB,KAAMyB,OACNrB,UAAU,GAEZV,MAAO,CACLM,KAAMyB,OACNC,QAAS,IAEXzB,WAAY,CACVD,KAAM,CAACyB,OAAQE,QACfD,QAAS,IAEX1B,KAAM,CACJA,KAAMyB,OACNC,QAAS,QAEXxB,YAAa,CACXF,KAAMyB,OACNC,QAAS,IAEXvB,SAAU,CACRH,KAAM4B,QACNF,SAAS,GAEXtB,SAAU,CACRJ,KAAM4B,QACNF,SAAS,GAEXhE,MAAO,CACLsC,KAAMyB,OACNC,QAAS,IAEXJ,KAAM,CACJtB,KAAMyB,OACNC,QAAS,IAEXpB,QAAS,CACPN,KAAM4B,QACNF,SAAS,IAGbG,MAAO,CAAC,oBAAqB,S,UCrE/B,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,uFCTA,oB,0CACExC,EAAAA,EAAAA,IA4BS,UA3BNS,KAAMP,EAAAO,KACNX,OAHLgB,EAAAA,EAAAA,IAAA,wQAGoT2B,EAAAC,YAAoBD,EAAAE,eAAc,C,eAA2BzC,EAAA0C,aAQ5WhC,SAAUV,EAAAU,UAAYV,EAAA2C,QACtBC,QAAK7B,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,MAAM,QAASF,K,CAGfhB,EAAA2C,UAAO,WADf7C,EAAAA,EAAAA,IAUM,OAxBVD,IAAA,EAgBMD,OAhBNgB,EAAAA,EAAAA,IAAA,CAgBY,kCACE2B,EAAAM,gBACRtB,MAAM,6BACNE,KAAK,OACLD,QAAQ,a,cAERnB,EAAAA,EAAAA,IAA2F,UAAnFT,MAAM,aAAakD,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,OAAO,eAAe,eAAa,K,UACrF5C,EAAAA,EAAAA,IAAmK,QAA7JT,MAAM,aAAa6B,KAAK,eAAeC,EAAE,mH,gBAvBrDtB,EAAAA,EAAAA,IAAA,QAyBIC,EAAAA,EAAAA,IAEO,QAFAT,OAzBXgB,EAAAA,EAAAA,IAAA,UAyBgCZ,EAAAkD,gB,EAC1BC,EAAAA,EAAAA,IAAalC,EAAAmC,OAAA,kBAAAC,GAAA,QAEfF,EAAAA,EAAAA,IAA+BlC,EAAAmC,OAAA,qBAAAC,GAAA,OA5BnCtD,E,CAiCA,OACE/D,KAAM,aACN+F,MAAO,CACLxB,KAAM,CACJA,KAAMyB,OACNC,QAAS,SACTqB,UAAYjM,GAAU,CAAC,SAAU,SAAU,SAASkM,SAASlM,IAE/DmM,QAAS,CACPjD,KAAMyB,OACNC,QAAS,UACTqB,UAAYjM,GAAU,CAAC,UAAW,YAAa,WAAY,QAAS,UAAW,SAASkM,SAASlM,IAEnGoM,KAAM,CACJlD,KAAMyB,OACNC,QAAS,UACTqB,UAAYjM,GAAU,CAAC,QAAS,UAAW,SAASkM,SAASlM,IAE/DqJ,SAAU,CACRH,KAAM4B,QACNF,SAAS,GAEXU,QAAS,CACPpC,KAAM4B,QACNF,SAAS,GAEXS,UAAW,CACTnC,KAAM4B,QACNF,SAAS,GAEXiB,aAAc,CACZ3C,KAAM4B,QACNF,SAAS,GAEXyB,aAAc,CACZnD,KAAMyB,OACNC,QAAS,QACTqB,UAAYjM,GAAU,CAAC,OAAQ,SAASkM,SAASlM,KAGrDsM,SAAU,CACRlB,cAAAA,GACE,MAAMmB,EAAW,CACfC,QAAS,qFACTC,UAAW,sGACXC,SAAU,yLACVC,MAAO,qFACPC,MAAO,uGACPC,QAAS,yFAEX,OAAON,EAASO,KAAKX,QACvB,EACAhB,WAAAA,GACE,MAAM4B,EAAQ,CACZC,MAAO,8BACPpC,QAAS,0BACTqC,MAAO,+BAET,OAAOF,EAAMD,KAAKV,KACpB,EACAZ,aAAAA,GACE,MAAMuB,EAAQ,CACZC,MAAO,cACPpC,QAAS,UACTqC,MAAO,WAET,OAAOF,EAAMD,KAAKV,KACpB,I,UC7FJ,MAAMpB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://my-tax-calculator/./src/utils/taxUtils.js","webpack://my-tax-calculator/./src/services/taxService.js","webpack://my-tax-calculator/./src/components/InputField.vue","webpack://my-tax-calculator/./src/components/InputField.vue?e0ec","webpack://my-tax-calculator/./src/components/Button.vue","webpack://my-tax-calculator/./src/components/Button.vue?4e0d"],"sourcesContent":["/**\r\n * Constants for tax calculations\r\n */\r\nexport const TAX_CONSTANTS = {\r\n  PERSONAL_RELIEF: 28800, // Annual personal relief (2400 monthly)\r\n  NSSF_TIER_I_MAX: 4320, // Monthly NSSF Tier I maximum (2.4% of 180,000)\r\n  NSSF_TIER_II_MAX: 18000, // Monthly NSSF Tier II maximum\r\n  NSSF_RATE: 0.024, // 2.4% NSSF contribution rate (3rd Schedule Feb 2025)\r\n  SHIF_RATE: 0.0275, // 2.75% SHIF rate (replaces NHIF)\r\n  SHIF_MIN_CONTRIBUTION: 300, // Minimum monthly SHIF contribution\r\n  SHIF_MAX_CONTRIBUTION: 5000, // Maximum monthly SHIF contribution\r\n  HOUSING_LEVY_RATE: 0.015, // 1.5% Housing Levy\r\n  VAT_RATE: 0.16,\r\n  DIGITAL_SERVICE_TAX_RATE: 0.015,\r\n  VAT_REGISTRATION_THRESHOLD: 5000000,\r\n  TAX_BRACKETS: [\r\n    { min: 0, max: 24000, rate: 10 },\r\n    { min: 24000, max: 32333, rate: 25 },\r\n    { min: 32333, max: 500000, rate: 30 },\r\n    { min: 500000, max: 800000, rate: 32.5 },\r\n    { min: 800000, max: null, rate: 35 }\r\n  ],\r\n  NSSF_TIER_I_RATE: 0.024, // 2.4% for Tier I\r\n  NSSF_TIER_II_RATE: 0.024 // 2.4% for Tier II\r\n};\r\n\r\n/**\r\n * Calculate tax for a given annual income using the provided tax brackets\r\n * @param {number} annualIncome Total annual income\r\n * @param {Array} brackets Tax brackets array with min, max, and rate properties\r\n * @returns {number} Total tax amount\r\n */\r\nexport function calculateIncomeTax(annualIncome, brackets) {\r\n  let totalTax = 0;\r\n  let remainingIncome = annualIncome;\r\n\r\n  // Sort brackets by minimum amount to ensure correct calculation order\r\n  const sortedBrackets = [...brackets].sort((a, b) => a.min - b.min);\r\n\r\n  for (const bracket of sortedBrackets) {\r\n    if (remainingIncome <= 0) break;\r\n\r\n    const bracketAmount = bracket.max === null\r\n      ? remainingIncome\r\n      : Math.min(remainingIncome, bracket.max - bracket.min);\r\n\r\n    if (bracketAmount > 0) {\r\n      totalTax += bracketAmount * (bracket.rate / 100);\r\n      remainingIncome -= bracketAmount;\r\n    }\r\n  }\r\n\r\n  return totalTax;\r\n}\r\n\r\n/**\r\n * Format currency in KES\r\n * @param {number} amount Amount to format\r\n * @returns {string} Formatted currency string\r\n */\r\nexport function formatCurrency(amount) {\r\n  return new Intl.NumberFormat('en-KE', {\r\n    style: 'currency',\r\n    currency: 'KES',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0\r\n  }).format(amount);\r\n}\r\n\r\n/**\r\n * Format percentage\r\n * @param {number} value Decimal value to format as percentage\r\n * @returns {string} Formatted percentage string\r\n */\r\nexport function formatPercentage(value) {\r\n  return new Intl.NumberFormat('en-KE', {\r\n    style: 'percent',\r\n    minimumFractionDigits: 1,\r\n    maximumFractionDigits: 1\r\n  }).format(value);\r\n}\r\n\r\n/**\r\n * Calculate NSSF contribution\r\n * @param {number} monthlyIncome Monthly gross income\r\n * @param {Object} nssfTiers NSSF tier options\r\n * @returns {number} Monthly NSSF contribution\r\n */\r\nexport function calculateNSSFContribution(monthlyIncome, nssfTiers = { includeTierI: true, includeTierII: true }) {\r\n  const nssfCalc = calculateNSSFByTier(monthlyIncome, nssfTiers);\r\n  return nssfCalc.total;\r\n}\r\n\r\n/**\r\n * Calculate NSSF contribution by tier\r\n * @param {number} monthlyIncome Monthly gross income\r\n * @param {Object} options NSSF calculation options\r\n * @returns {Object} NSSF contributions by tier\r\n */\r\nexport function calculateNSSFByTier(monthlyIncome, { includeTierI = true, includeTierII = true } = {}) {\r\n  const tierI = includeTierI \r\n    ? Math.min(monthlyIncome * TAX_CONSTANTS.NSSF_TIER_I_RATE, TAX_CONSTANTS.NSSF_TIER_I_MAX)\r\n    : 0;\r\n    \r\n  const tierII = includeTierII \r\n    ? Math.min(\r\n        Math.max(0, monthlyIncome - TAX_CONSTANTS.NSSF_TIER_I_MAX) * TAX_CONSTANTS.NSSF_TIER_II_RATE,\r\n        TAX_CONSTANTS.NSSF_TIER_II_MAX\r\n      )\r\n    : 0;\r\n\r\n  return {\r\n    tierI,\r\n    tierII,\r\n    total: tierI + tierII\r\n  };\r\n}\r\n\r\n/**\r\n * Calculate SHIF contribution\r\n * @param {number} monthlyIncome Monthly gross income\r\n * @returns {number} Monthly SHIF contribution\r\n */\r\nexport function calculateSHIFContribution(monthlyIncome) {\r\n  const contribution = monthlyIncome * TAX_CONSTANTS.SHIF_RATE;\r\n  return Math.min(Math.max(TAX_CONSTANTS.SHIF_MIN_CONTRIBUTION, contribution), TAX_CONSTANTS.SHIF_MAX_CONTRIBUTION);\r\n}\r\n\r\n/**\r\n * Calculate housing levy\r\n * @param {number} monthlyIncome Monthly gross income\r\n * @returns {number} Monthly housing levy amount\r\n */\r\nexport function calculateHousingLevy(monthlyIncome) {\r\n  return monthlyIncome * TAX_CONSTANTS.HOUSING_LEVY_RATE;\r\n}\r\n\r\n/**\r\n * Calculate tax for a specific tax bracket\r\n * @param {number} income Taxable income\r\n * @param {Object} bracket Tax bracket information\r\n * @returns {number} Tax amount for the bracket\r\n */\r\nfunction calculateBracketTax(income, bracket) {\r\n  const taxableInBracket = Math.min(\r\n    Math.max(0, income - bracket.min),\r\n    bracket.max ? bracket.max - bracket.min : Infinity\r\n  );\r\n  return taxableInBracket * bracket.rate;\r\n}\r\n\r\n/**\r\n * Calculate monthly PAYE tax\r\n * @param {number} annualTaxableIncome Annual taxable income\r\n * @param {Array} taxBrackets Tax brackets from the tax service\r\n * @returns {number} Annual PAYE tax\r\n */\r\nexport function calculatePAYE(annualTaxableIncome, taxBrackets) {\r\n  return taxBrackets.reduce((totalTax, bracket) => {\r\n    return totalTax + calculateBracketTax(annualTaxableIncome, bracket);\r\n  }, 0);\r\n}\r\n\r\n/**\r\n * Calculate net income and all tax components\r\n * @param {Object} params Calculation parameters\r\n * @returns {Object} Calculation results\r\n */\r\nexport function calculateNetIncome({\r\n  annualIncome,\r\n  includeNSSF = true,\r\n  includeSHIF = true,\r\n  includeHousingLevy = true,\r\n  taxRates,\r\n  nssfTiers = { includeTierI: true, includeTierII: true },\r\n  personalRelief = TAX_CONSTANTS.PERSONAL_RELIEF\r\n}) {\r\n  const monthlyIncome = annualIncome / 12;\r\n  \r\n  // Calculate statutory deductions with NSSF tiers\r\n  const nssfDetails = calculateNSSFByTier(monthlyIncome, nssfTiers);\r\n  const monthlyNSSF = includeNSSF ? nssfDetails.total : 0;\r\n  const monthlySHIF = includeSHIF ? calculateSHIFContribution(monthlyIncome) : 0;\r\n  const monthlyHousingLevy = includeHousingLevy ? calculateHousingLevy(monthlyIncome) : 0;\r\n  \r\n  // Calculate annual values\r\n  const annualNSSF = monthlyNSSF * 12;\r\n  const annualSHIF = monthlySHIF * 12;\r\n  const annualHousingLevy = monthlyHousingLevy * 12;\r\n  \r\n  // Calculate taxable income (deducting SHIF and Housing Levy as reliefs)\r\n  const taxableIncome = annualIncome - (includeNSSF ? annualNSSF : 0) - \r\n    (includeSHIF ? annualSHIF : 0) - (includeHousingLevy ? annualHousingLevy : 0);\r\n  \r\n  // Calculate PAYE\r\n  const incomeTax = calculatePAYE(taxableIncome, taxRates.brackets);\r\n  const taxAfterRelief = Math.max(0, incomeTax - personalRelief);\r\n  \r\n  // Calculate total deductions and net income\r\n  const totalDeductions = taxAfterRelief + annualNSSF + annualSHIF + annualHousingLevy;\r\n  const netIncome = annualIncome - totalDeductions;\r\n  \r\n  return {\r\n    grossIncome: annualIncome,\r\n    taxableIncome,\r\n    incomeTax,\r\n    personalRelief,\r\n    nssfContribution: annualNSSF,\r\n    nssfTierI: nssfDetails.tierI * 12,\r\n    nssfTierII: nssfDetails.tierII * 12,\r\n    shifContribution: annualSHIF,\r\n    housingLevy: annualHousingLevy,\r\n    taxAfterRelief,\r\n    totalDeductions,\r\n    netIncome,\r\n    monthlyGross: monthlyIncome,\r\n    monthlyNet: netIncome / 12,\r\n    monthlyDeductions: totalDeductions / 12,\r\n    effectiveTaxRate: totalDeductions / annualIncome,\r\n    monthlyBreakdown: {\r\n      grossPay: monthlyIncome,\r\n      nssf: monthlyNSSF,\r\n      nssfTierI: nssfDetails.tierI,\r\n      nssfTierII: nssfDetails.tierII,\r\n      shif: monthlySHIF,\r\n      housingLevy: monthlyHousingLevy,\r\n      taxableIncome: taxableIncome / 12,\r\n      paye: taxAfterRelief / 12,\r\n      personalRelief: personalRelief / 12,\r\n      netPay: netIncome / 12\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Calculate gross income from net pay\r\n * @param {number} targetNetPay Desired net monthly pay\r\n * @param {Object} options Calculation options\r\n * @returns {number} Required gross income\r\n */\r\nexport function calculateGrossFromNet(targetNetPay, {\r\n  includeNSSF = true,\r\n  includeSHIF = true,\r\n  includeHousingLevy = true,\r\n  taxRates,\r\n  nssfTiers = { includeTierI: true, includeTierII: true },\r\n  personalRelief = TAX_CONSTANTS.PERSONAL_RELIEF\r\n} = {}) {\r\n  let low = targetNetPay;\r\n  let high = targetNetPay * 3; // Initial upper bound\r\n  let iterations = 0;\r\n  const maxIterations = 20;\r\n  const tolerance = 0.01;\r\n\r\n  while (iterations < maxIterations) {\r\n    const testGross = (low + high) / 2;\r\n    const result = calculateNetIncome({\r\n      annualIncome: testGross * 12,\r\n      includeNSSF,\r\n      includeSHIF,\r\n      includeHousingLevy,\r\n      taxRates,\r\n      nssfTiers,\r\n      personalRelief\r\n    });\r\n\r\n    const testNet = result.monthlyNet;\r\n    const diff = testNet - targetNetPay;\r\n\r\n    if (Math.abs(diff) < tolerance) {\r\n      return testGross * 12;\r\n    }\r\n\r\n    if (diff > 0) {\r\n      high = testGross;\r\n    } else {\r\n      low = testGross;\r\n    }\r\n\r\n    iterations++;\r\n  }\r\n\r\n  // Return best approximation after max iterations\r\n  return (low + high) / 2 * 12;\r\n}\r\n\r\n/**\r\n * Generate monthly breakdown of income and deductions\r\n * @param {Object} calculation Tax calculation results\r\n * @returns {Array} Monthly breakdown\r\n */\r\nexport function generateMonthlyBreakdown(calculation) {\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n  \r\n  return months.map(name => ({\r\n    name,\r\n    gross: calculation.monthlyGross,\r\n    deductions: calculation.monthlyDeductions,\r\n    net: calculation.monthlyNet\r\n  }));\r\n}\r\n\r\n/**\r\n * Generate tax calculation summary for reports\r\n * @param {Object} calculation Tax calculation results\r\n * @returns {Object} Summary object\r\n */\r\nexport function generateTaxSummary(calculation) {\r\n  return {\r\n    summary: {\r\n      annualGrossIncome: calculation.grossIncome,\r\n      annualNetIncome: calculation.netIncome,\r\n      totalTax: calculation.taxAfterRelief,\r\n      totalDeductions: calculation.totalDeductions,\r\n      effectiveTaxRate: calculation.effectiveTaxRate\r\n    },\r\n    monthly: {\r\n      grossIncome: calculation.monthlyGross,\r\n      netIncome: calculation.monthlyNet,\r\n      deductions: calculation.monthlyDeductions\r\n    },\r\n    deductions: {\r\n      incomeTax: calculation.taxAfterRelief,\r\n      nssf: calculation.nssfContribution,\r\n      shif: calculation.shifContribution,\r\n      personalRelief: calculation.personalRelief\r\n    },\r\n    breakdown: generateMonthlyBreakdown(calculation)\r\n  };\r\n}\r\n\r\n/**\r\n * Calculate Digital Service Tax\r\n * @param {number} grossIncome Gross income\r\n * @returns {number} Digital Service Tax amount\r\n */\r\nexport function calculateDigitalServiceTax(grossIncome) {\r\n  return grossIncome * TAX_CONSTANTS.DIGITAL_SERVICE_TAX_RATE;\r\n}","import { db } from '../firebase';\r\nimport {\r\n  doc,\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  setDoc,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  deleteDoc\r\n} from 'firebase/firestore';\r\n\r\nconst COLLECTIONS = {\r\n  TAX_RATES: 'taxRates',\r\n  CALCULATIONS: 'calculations',\r\n  SETTINGS: 'settings'\r\n};\r\n\r\n// Default tax rates to use when offline or unauthenticated\r\nexport const DEFAULT_TAX_RATES = {\r\n  year: 2024,\r\n  personalRelief: 28800, // Annual personal relief\r\n  brackets: [\r\n    { min: 0, max: 288000, rate: 0.10 },\r\n    { min: 288000, max: 388000, rate: 0.25 },\r\n    { min: 388000, max: 6000000, rate: 0.30 },\r\n    { min: 6000000, max: 9600000, rate: 0.32 },\r\n    { min: 9600000, max: null, rate: 0.35 }\r\n  ]\r\n};\r\n\r\n// Default settings for offline or unauthenticated users\r\nexport const DEFAULT_SETTINGS = {\r\n  currency: 'KES',\r\n  countryCode: 'KE',\r\n  taxYearStart: 1, // January\r\n  personalReliefEnabled: true,\r\n  nssfEnabled: true,\r\n  shifEnabled: true\r\n};\r\n\r\n/**\r\n * Get tax rates for a specific year\r\n * @param {number} year Tax year\r\n * @returns {Promise<Object>} Tax rates and brackets\r\n */\r\nexport async function getTaxRates(year) {\r\n  try {\r\n    const ratesDoc = doc(db, COLLECTIONS.TAX_RATES, year.toString());\r\n    const ratesSnapshot = await getDoc(ratesDoc);\r\n    \r\n    if (!ratesSnapshot.exists()) {\r\n      return DEFAULT_TAX_RATES;\r\n    }\r\n\r\n    return ratesSnapshot.data();\r\n  } catch (error) {\r\n    console.warn('Error fetching tax rates:', error);\r\n    return DEFAULT_TAX_RATES;\r\n  }\r\n}\r\n\r\n/**\r\n * Save a tax calculation\r\n * @param {string} userId User ID\r\n * @param {Object} calculation Tax calculation details\r\n * @returns {Promise<void>}\r\n */\r\nexport async function saveTaxCalculation(userId, calculation) {\r\n  const calculationRef = doc(collection(db, COLLECTIONS.CALCULATIONS));\r\n  await setDoc(calculationRef, {\r\n    userId,\r\n    timestamp: new Date(),\r\n    ...calculation\r\n  });\r\n}\r\n\r\n/**\r\n * Get user's tax calculations history\r\n * @param {string} userId User ID\r\n * @param {number} limit Maximum number of calculations to retrieve\r\n * @returns {Promise<Array>} Array of calculations\r\n */\r\nexport async function getUserCalculations(userId, limit = 10) {\r\n  const calculationsQuery = query(\r\n    collection(db, COLLECTIONS.CALCULATIONS),\r\n    where('userId', '==', userId),\r\n    orderBy('timestamp', 'desc'),\r\n    limit(limit)\r\n  );\r\n  \r\n  const querySnapshot = await getDocs(calculationsQuery);\r\n  return querySnapshot.docs.map(doc => ({\r\n    id: doc.id,\r\n    ...doc.data()\r\n  }));\r\n}\r\n\r\n/**\r\n * Get tax settings\r\n * @returns {Promise<Object>} Tax settings\r\n */\r\nexport async function getTaxSettings() {\r\n  try {\r\n    const settingsDoc = doc(db, COLLECTIONS.SETTINGS, 'default');\r\n    const settingsSnapshot = await getDoc(settingsDoc);\r\n    \r\n    if (!settingsSnapshot.exists()) {\r\n      return DEFAULT_SETTINGS;\r\n    }\r\n\r\n    return settingsSnapshot.data();\r\n  } catch (error) {\r\n    console.warn('Error fetching tax settings:', error);\r\n    return DEFAULT_SETTINGS;\r\n  }\r\n}\r\n\r\n/**\r\n * Update tax settings\r\n * @param {Object} settings New tax settings\r\n * @returns {Promise<void>}\r\n */\r\nexport async function updateTaxSettings(settings) {\r\n  const settingsDoc = doc(db, COLLECTIONS.SETTINGS, 'default');\r\n  await setDoc(settingsDoc, settings, { merge: true });\r\n}\r\n\r\n/**\r\n * Update tax rates\r\n * @param {Object} rates Tax rates and brackets\r\n * @returns {Promise<void>}\r\n */\r\nexport async function updateTaxRates(rates) {\r\n  const year = new Date().getFullYear();\r\n  const ratesDoc = doc(db, COLLECTIONS.TAX_RATES, year.toString());\r\n  await setDoc(ratesDoc, {\r\n    ...rates,\r\n    year,\r\n    updatedAt: new Date()\r\n  });\r\n}\r\n\r\n/**\r\n * Delete a saved calculation\r\n * @param {string} calculationId Calculation ID\r\n * @returns {Promise<void>}\r\n */\r\nexport async function deleteCalculation(calculationId) {\r\n  const calculationDoc = doc(db, COLLECTIONS.CALCULATIONS, calculationId);\r\n  await deleteDoc(calculationDoc);\r\n}","<template>\r\n  <div class=\"w-full\">\r\n    <label v-if=\"label\" :for=\"id\" class=\"block text-sm font-medium text-gray-700 mb-1\">{{ label }}</label>\r\n    <div class=\"relative\">\r\n      <input\r\n        :id=\"id\"\r\n        :type=\"type\"\r\n        :value=\"modelValue\"\r\n        :placeholder=\"placeholder\"\r\n        :disabled=\"disabled\"\r\n        :required=\"required\"\r\n        :class=\"[\r\n          'input-field',\r\n          error ? 'input-error' : '',\r\n          disabled ? 'bg-gray-50 text-gray-500 cursor-not-allowed' : '',\r\n          rounded ? 'rounded-lg' : 'rounded-none'\r\n        ]\"\r\n        @input=\"$emit('update:modelValue', $event.target.value)\"\r\n        @blur=\"$emit('blur', $event)\"\r\n      />\r\n      <div v-if=\"error\" class=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\r\n        <svg class=\"h-5 w-5 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    <p v-if=\"error\" class=\"mt-1 text-sm text-red-600\">{{ error }}</p>\r\n    <p v-if=\"hint\" class=\"mt-1 text-sm text-gray-500\">{{ hint }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'InputField',\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    label: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    modelValue: {\r\n      type: [String, Number],\r\n      default: ''\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'text'\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    required: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    error: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    hint: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    rounded: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  emits: ['update:modelValue', 'blur']\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.input-field {\r\n  @apply w-full rounded-md border-gray-300 shadow-sm transition-colors duration-200;\r\n}\r\n\r\n.input-field:focus {\r\n  @apply border-green-600 ring-2 ring-green-600 ring-opacity-50 outline-none;\r\n}\r\n\r\n.input-error {\r\n  @apply border-red-300;\r\n}\r\n\r\n.input-error:focus {\r\n  @apply border-red-500 ring-red-500;\r\n}\r\n</style>","import { render } from \"./InputField.vue?vue&type=template&id=b708b39a&scoped=true\"\nimport script from \"./InputField.vue?vue&type=script&lang=js\"\nexport * from \"./InputField.vue?vue&type=script&lang=js\"\n\nimport \"./InputField.vue?vue&type=style&index=0&id=b708b39a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b708b39a\"]])\n\nexport default __exports__","<template>\r\n  <button\r\n    :type=\"type\"\r\n    :class=\"[\r\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md text-center',\r\n      'border font-medium shadow-sm w-auto transition-all duration-200 ease-in-out',\r\n      'disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2',\r\n      sizeClasses,\r\n      variantClasses,\r\n      { 'flex-nowrap': !allowWrap }\r\n    ]\"\r\n    :disabled=\"disabled || loading\"\r\n    @click=\"$emit('click', $event)\"\r\n  >\r\n    <svg\r\n      v-if=\"loading\"\r\n      class=\"animate-spin flex-shrink-0 mr-2\"\r\n      :class=\"iconSizeClass\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\" />\r\n      <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\r\n    </svg>\r\n    <span :class=\"{ 'truncate': truncateText }\">\r\n      <slot></slot>\r\n    </span>\r\n    <slot name=\"right-icon\"></slot>\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'BaseButton',\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: 'button',\r\n      validator: (value) => ['button', 'submit', 'reset'].includes(value)\r\n    },\r\n    variant: {\r\n      type: String,\r\n      default: 'primary',\r\n      validator: (value) => ['primary', 'secondary', 'gradient', 'white', 'outline', 'kenya'].includes(value)\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: 'default',\r\n      validator: (value) => ['small', 'default', 'large'].includes(value)\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    loading: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    allowWrap: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    truncateText: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    iconPosition: {\r\n      type: String,\r\n      default: 'right',\r\n      validator: (value) => ['left', 'right'].includes(value)\r\n    }\r\n  },\r\n  computed: {\r\n    variantClasses() {\r\n      const variants = {\r\n        primary: 'border-transparent bg-green-600 text-white hover:bg-green-500 focus:ring-green-600',\r\n        secondary: 'border-gray-300 bg-white text-gray-700 hover:bg-gray-50 hover:border-green-500 focus:ring-green-600',\r\n        gradient: 'border-transparent bg-gradient-to-r from-green-600 via-green-500 to-green-600 text-white hover:from-green-500 hover:via-green-400 hover:to-green-500 focus:ring-green-600 rounded-full',\r\n        kenya: 'border-transparent bg-green-600 text-white hover:bg-green-500 focus:ring-green-600',\r\n        white: 'border-transparent bg-white text-gray-900 hover:bg-gray-50 hover:text-green-600 focus:ring-green-600',\r\n        outline: 'border-green-600 bg-transparent text-green-600 hover:bg-green-50 focus:ring-green-600'\r\n      };\r\n      return variants[this.variant];\r\n    },\r\n    sizeClasses() {\r\n      const sizes = {\r\n        small: 'px-3 py-1.5 text-sm gap-1.5',\r\n        default: 'px-4 py-2 text-sm gap-2',\r\n        large: 'px-6 py-3 text-base gap-2.5'\r\n      };\r\n      return sizes[this.size];\r\n    },\r\n    iconSizeClass() {\r\n      const sizes = {\r\n        small: 'h-3.5 w-3.5',\r\n        default: 'h-4 w-4',\r\n        large: 'h-5 w-5'\r\n      };\r\n      return sizes[this.size];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.flex-nowrap {\r\n  white-space: nowrap;\r\n}\r\n\r\n.inline-flex {\r\n  display: inline-flex;\r\n  align-items: center;\r\n}\r\n</style>","import { render } from \"./Button.vue?vue&type=template&id=7d8b5a0b&scoped=true\"\nimport script from \"./Button.vue?vue&type=script&lang=js\"\nexport * from \"./Button.vue?vue&type=script&lang=js\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=7d8b5a0b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7d8b5a0b\"]])\n\nexport default __exports__"],"names":["TAX_CONSTANTS","PERSONAL_RELIEF","NSSF_TIER_I_MAX","NSSF_TIER_II_MAX","NSSF_RATE","SHIF_RATE","SHIF_MIN_CONTRIBUTION","SHIF_MAX_CONTRIBUTION","HOUSING_LEVY_RATE","VAT_RATE","DIGITAL_SERVICE_TAX_RATE","VAT_REGISTRATION_THRESHOLD","TAX_BRACKETS","min","max","rate","NSSF_TIER_I_RATE","NSSF_TIER_II_RATE","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","value","calculateNSSFByTier","monthlyIncome","includeTierI","includeTierII","tierI","Math","tierII","total","calculateSHIFContribution","contribution","calculateHousingLevy","calculateBracketTax","income","bracket","taxableInBracket","Infinity","calculatePAYE","annualTaxableIncome","taxBrackets","reduce","totalTax","calculateNetIncome","annualIncome","includeNSSF","includeSHIF","includeHousingLevy","taxRates","nssfTiers","personalRelief","nssfDetails","monthlyNSSF","monthlySHIF","monthlyHousingLevy","annualNSSF","annualSHIF","annualHousingLevy","taxableIncome","incomeTax","brackets","taxAfterRelief","totalDeductions","netIncome","grossIncome","nssfContribution","nssfTierI","nssfTierII","shifContribution","housingLevy","monthlyGross","monthlyNet","monthlyDeductions","effectiveTaxRate","monthlyBreakdown","grossPay","nssf","shif","paye","netPay","calculateGrossFromNet","targetNetPay","low","high","iterations","maxIterations","tolerance","testGross","result","testNet","diff","abs","generateMonthlyBreakdown","calculation","months","map","name","gross","deductions","net","generateTaxSummary","summary","annualGrossIncome","annualNetIncome","monthly","breakdown","calculateDigitalServiceTax","COLLECTIONS","TAX_RATES","CALCULATIONS","SETTINGS","DEFAULT_TAX_RATES","year","DEFAULT_SETTINGS","countryCode","taxYearStart","personalReliefEnabled","nssfEnabled","shifEnabled","async","getTaxRates","ratesDoc","doc","db","toString","ratesSnapshot","getDoc","exists","data","error","console","warn","saveTaxCalculation","userId","calculationRef","collection","setDoc","timestamp","Date","getUserCalculations","limit","calculationsQuery","query","where","orderBy","querySnapshot","getDocs","docs","id","getTaxSettings","settingsDoc","settingsSnapshot","updateTaxRates","rates","getFullYear","updatedAt","class","key","_createElementBlock","_hoisted_1","$props","label","for","_hoisted_2","_createCommentVNode","_createElementVNode","_hoisted_3","type","modelValue","placeholder","disabled","required","_normalizeClass","rounded","onInput","_cache","$event","_ctx","$emit","target","onBlur","_hoisted_4","_hoisted_5","xmlns","viewBox","fill","d","_hoisted_6","_toDisplayString","hint","_hoisted_7","props","String","default","Number","Boolean","emits","__exports__","render","$options","sizeClasses","variantClasses","allowWrap","loading","onClick","iconSizeClass","cx","cy","r","stroke","truncateText","_renderSlot","$slots","undefined","validator","includes","variant","size","iconPosition","computed","variants","primary","secondary","gradient","kenya","white","outline","this","sizes","small","large"],"sourceRoot":""}